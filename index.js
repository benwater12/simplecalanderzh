(()=>{"use strict";class e{static info(e){e&&console.info("%cSimple Calendar","color:blue;",` | ${e}`)}static warn(e){e&&console.warn("%cSimple Calendar","color:orange;",` | ${e}`)}static error(e){e instanceof Error?console.error("%cSimple Calendar","color:red;",` | Error "${e.message}"\n${e.stack}`):console.error("%cSimple Calendar","color:red;",` | ${e}`)}static debug(t){t&&e.debugMode&&console.debug("%cSimple Calendar","color:green;",` | ${t}`)}}e.debugMode=!1;const t="foundryvtt-simple-calendar",n=`module.${t}`;var s,a,i,o,r,c,h,l;!function(e){e.YearConfiguration="year-config",e.WeekdayConfiguration="weekday-config",e.MonthConfiguration="month-config",e.CurrentDate="current-date",e.Notes="notes",e.AllowPlayersToAddNotes="allow-players-add-notes",e.DefaultNoteVisibility="default-note-visibility",e.LeapYearRule="leap-year-rule",e.TimeConfiguration="time-configuration",e.GeneralConfiguration="general-configuration",e.ImportRan="import-ran",e.SeasonConfiguration="season-configuration",e.MoonConfiguration="moon-configuration"}(s||(s={})),function(e){e[e.Never=0]="Never",e[e.Weekly=1]="Weekly",e[e.Monthly=2]="Monthly",e[e.Yearly=3]="Yearly"}(a||(a={})),function(e){e.None="none",e.Gregorian="gregorian",e.Custom="custom"}(i||(i={})),function(e){e.primary="primary",e.time="time",e.journal="journal"}(o||(o={})),function(e){e.None="none",e.Self="self",e.ThirdParty="third-party",e.Mixed="mixed"}(r||(r={})),function(e){e.NewMoon="new",e.WaxingCrescent="waxing-crescent",e.FirstQuarter="first-quarter",e.WaxingGibbous="waxing-gibbous",e.Full="full",e.WaningGibbous="waning-gibbous",e.LastQuarter="last-quarter",e.WaningCrescent="waning-crescent"}(c||(c={})),function(e){e.None="none",e.LeapYear="leap-year",e.XYears="x-years"}(h||(h={})),function(e){e.DateTimeChange="simple-calendar-date-time-change"}(l||(l={}));class u{static IsGm(){return!!game.user&&game.user.isGM}static UserName(){return game.user?game.user.name:""}static UserID(){return game.user?game.user.id:""}static Localize(e){return game.i18n.localize(e)}static RegisterSettings(){game.settings.register(t,s.GeneralConfiguration,{name:"General Configuration",scope:"world",config:!1,type:Object,onChange:j.instance.settingUpdate.bind(j.instance,!0,"general")}),game.settings.register(t,s.YearConfiguration,{name:"Year Configuration",scope:"world",config:!1,type:Object,onChange:j.instance.settingUpdate.bind(j.instance,!0,"year")}),game.settings.register(t,s.WeekdayConfiguration,{name:"Weekday Configuration",scope:"world",config:!1,type:Array,default:[],onChange:j.instance.settingUpdate.bind(j.instance,!0,"weekday")}),game.settings.register(t,s.MonthConfiguration,{name:"Month Configuration",scope:"world",config:!1,type:Array,default:[],onChange:j.instance.settingUpdate.bind(j.instance,!0,"month")}),game.settings.register(t,s.CurrentDate,{name:"Current Date",scope:"world",config:!1,type:Object,onChange:j.instance.settingUpdate.bind(j.instance,!0,"current")}),game.settings.register(t,s.LeapYearRule,{name:"Leap Year Rule",scope:"world",config:!1,type:Object,onChange:j.instance.settingUpdate.bind(j.instance,!0,"leapyear")}),game.settings.register(t,s.DefaultNoteVisibility,{name:"FSC.Configuration.DefaultNoteVisibility",hint:"FSC.Configuration.DefaultNoteVisibilityHint",scope:"world",type:Boolean,default:!1}),game.settings.register(t,s.Notes,{name:"Notes",scope:"world",config:!1,type:Array,default:[],onChange:j.instance.loadNotes.bind(j.instance,!0)}),game.settings.register(t,s.TimeConfiguration,{name:"Time",scope:"world",config:!1,type:Object,default:{},onChange:j.instance.settingUpdate.bind(j.instance,!0,"time")}),game.settings.register(t,s.ImportRan,{name:"Import",scope:"world",config:!1,type:Boolean,default:!1}),game.settings.register(t,s.SeasonConfiguration,{name:"Season Configuration",scope:"world",config:!1,type:Array,default:[],onChange:j.instance.settingUpdate.bind(j.instance,!0,"season")}),game.settings.register(t,s.MoonConfiguration,{name:"Moon Configuration",scope:"world",config:!1,type:Array,default:[],onChange:j.instance.settingUpdate.bind(j.instance,!0,"moon")})}static GetImportRan(){return game.settings.get(t,s.ImportRan)}static GetDefaultNoteVisibility(){return game.settings.get(t,s.DefaultNoteVisibility)}static LoadGeneralSettings(){return game.settings.get(t,s.GeneralConfiguration)}static LoadYearData(){return game.settings.get(t,s.YearConfiguration)}static LoadCurrentDate(){return game.settings.get(t,s.CurrentDate)}static LoadMonthData(){let e=[],n=game.settings.get(t,s.MonthConfiguration);return n&&n.length&&(e=Array.isArray(n[0])?n[0]:n),e}static LoadWeekdayData(){let e=[],n=game.settings.get(t,s.WeekdayConfiguration);return n&&n.length&&(e=Array.isArray(n[0])?n[0]:n),e}static LoadSeasonData(){let e=[],n=game.settings.get(t,s.SeasonConfiguration);return n&&n.length&&(e=Array.isArray(n[0])?n[0]:n),e}static LoadMoonData(){let e=[],n=game.settings.get(t,s.MoonConfiguration);return n&&n.length&&(e=Array.isArray(n[0])?n[0]:n),e}static LoadLeapYearRules(){return game.settings.get(t,s.LeapYearRule)}static LoadTimeData(){return game.settings.get(t,s.TimeConfiguration)}static LoadNotes(){let e=[],n=game.settings.get(t,s.Notes);return n&&n.length&&(e=Array.isArray(n[0])?n[0]:n),e}static async SetImportRan(e){return!!u.IsGm()&&(await game.settings.set(t,s.ImportRan,e),!0)}static async SaveGeneralSettings(n){if(u.IsGm()){e.debug("Saving General Settings.");const a=u.LoadGeneralSettings();if(JSON.stringify(n)!==JSON.stringify(a))return game.settings.set(t,s.GeneralConfiguration,n).then((()=>!0));e.debug("General Settings have not changed, not updating.")}return!1}static async SaveCurrentDate(n){if(game.user&&game.user.isGM){e.debug("Saving current date.");const a=n.getMonth();if(a){const i=a.getDay();if(i){const o=game.settings.get(t,s.CurrentDate),r={year:n.numericRepresentation,month:a.numericRepresentation,day:i.numericRepresentation,seconds:n.time.seconds};if(o.year!==r.year||o.month!==r.month||o.day!==r.day||o.seconds!==r.seconds)return await game.settings.set(t,s.CurrentDate,r),class{static emit(t){if(j.instance&&j.instance.currentYear){const e={};if(t===l.DateTimeChange){e.season={},e.moons=[],e.month={},e.day={},e.time={},e.year={number:j.instance.currentYear.numericRepresentation,prefix:j.instance.currentYear.prefix,postfix:j.instance.currentYear.postfix,isLeapYear:j.instance.currentYear.leapYearRule.isLeapYear(j.instance.currentYear.numericRepresentation)};const t=j.instance.currentYear.getMonth();if(t){e.month={name:t.name,number:t.numericRepresentation,intercalary:t.intercalary,numberOfDays:t.numberOfDays,numberOfLeapYearDays:t.numberOfLeapYearDays};const n=t.getDay();n&&(e.day={number:n.numericRepresentation})}e.time=j.instance.currentYear.time.getCurrentTime(),e.season=j.instance.currentYear.getCurrentSeason();for(let t=0;t<j.instance.currentYear.moons.length;t++){const n=j.instance.currentYear.moons[t].getMoonPhase(j.instance.currentYear);e.moons.push({name:j.instance.currentYear.moons[t].name,color:j.instance.currentYear.moons[t].color,cycleLength:j.instance.currentYear.moons[t].cycleLength,cycleDayAdjust:j.instance.currentYear.moons[t].cycleDayAdjust,currentPhase:n})}}Hooks.callAll(t,e)}else e.error("Unable to emit hook as current year is not set up.")}}.emit(l.DateTimeChange),!0;e.debug("Current Date data has not changed, not updating settings")}else e.error("Unable to save current date, no current day found.")}else e.error("Unable to save current date, no current month found.")}else e.error("Unable to save current date, no current year found.");return!1}static async SaveYearConfiguration(n){if(game.user&&game.user.isGM){e.debug("Saving year configuration.");const a=game.settings.get(t,s.YearConfiguration);a.hasOwnProperty("showWeekdayHeadings")||(a.showWeekdayHeadings=!0);const i={numericRepresentation:n.numericRepresentation,prefix:n.prefix,postfix:n.postfix,showWeekdayHeadings:n.showWeekdayHeadings,firstWeekday:n.firstWeekday};if(a.numericRepresentation!==i.numericRepresentation||a.prefix!==i.prefix||a.postfix!==i.postfix||a.showWeekdayHeadings!==i.showWeekdayHeadings||a.firstWeekday!==i.firstWeekday)return game.settings.set(t,s.YearConfiguration,i).then((()=>!0));e.debug("Year configuration has not changed, not updating settings")}return!1}static async SaveMonthConfiguration(n){if(game.user&&game.user.isGM){e.debug("Saving month configuration.");const a=JSON.stringify(u.LoadMonthData()),i=n.map((e=>({name:e.name,numericRepresentation:e.numericRepresentation,numericRepresentationOffset:e.numericRepresentationOffset,numberOfDays:e.numberOfDays,numberOfLeapYearDays:e.numberOfLeapYearDays,intercalary:e.intercalary,intercalaryInclude:e.intercalaryInclude})));if(a!==JSON.stringify(i))return game.settings.set(t,s.MonthConfiguration,i).then((()=>!0));e.debug("Month configuration has not changed, not updating settings")}return!1}static async SaveWeekdayConfiguration(n){if(game.user&&game.user.isGM){e.debug("Saving weekday configuration.");const a=JSON.stringify(u.LoadWeekdayData()),i=n.map((e=>({name:e.name,numericRepresentation:e.numericRepresentation})));if(a!==JSON.stringify(i))return game.settings.set(t,s.WeekdayConfiguration,i).then((()=>!0));e.debug("Weekday configuration has not changed, not updating settings")}return!1}static async SaveSeasonConfiguration(n){if(u.IsGm()){e.debug("Saving season configuration.");const a=JSON.stringify(u.LoadSeasonData()),i=n.map((e=>({name:e.name,startingMonth:e.startingMonth,startingDay:e.startingDay,color:e.color,customColor:e.customColor})));if(a!==JSON.stringify(i))return game.settings.set(t,s.SeasonConfiguration,i).then((()=>!0));e.debug("Season configuration has not changed, not updating.")}return!1}static async SaveMoonConfiguration(n){if(u.IsGm()){e.debug("Saving moon configuration.");const a=JSON.stringify(u.LoadMoonData()),i=n.map((e=>({name:e.name,cycleLength:e.cycleLength,firstNewMoon:e.firstNewMoon,phases:e.phases,color:e.color,cycleDayAdjust:e.cycleDayAdjust})));if(a!==JSON.stringify(i))return game.settings.set(t,s.MoonConfiguration,i).then((()=>!0));e.debug("Moon configuration has not changed, not updating.")}return!1}static async SaveLeapYearRules(n){if(game.user&&game.user.isGM){e.debug("Saving leap year configuration.");const a=u.LoadLeapYearRules(),i={rule:n.rule,customMod:n.customMod};if(a.rule!==i.rule||a.customMod!==i.customMod)return game.settings.set(t,s.LeapYearRule,i);e.debug("Leap Year configuration has not changed, not updating settings")}return!1}static async SaveTimeConfiguration(n){if(game.user&&game.user.isGM){e.debug("Saving time configuration.");const a=u.LoadTimeData(),i={hoursInDay:n.hoursInDay,minutesInHour:n.minutesInHour,secondsInMinute:n.secondsInMinute,gameTimeRatio:n.gameTimeRatio};if(JSON.stringify(a)!==JSON.stringify(i))return game.settings.set(t,s.TimeConfiguration,i).then((()=>!0));e.debug("Time configuration has not changed, not updating settings")}return!1}static async SaveNotes(a){e.debug("Saving notes.");const i=a.map((e=>({title:e.title,content:e.content,author:e.author,year:e.year,month:e.month,day:e.day,monthDisplay:e.monthDisplay,playerVisible:e.playerVisible,id:e.id,repeats:e.repeats})));if(u.IsGm())return game.settings.set(t,s.Notes,i).then((()=>!0));{const t={type:o.journal,data:{notes:a}};return e.debug("User saving notes..."),void await game.socket.emit(n,t)}}static async SetDefaultNoteVisibility(e){return!(!game.user||!game.user.isGM)&&await game.settings.set(t,s.DefaultNoteVisibility,e).then((()=>!0))}static UiNotification(t,n="info"){ui.notifications?"info"===n?ui.notifications.info(t):"warn"===n?ui.notifications.warn(t):"error"===n&&ui.notifications.error(t):e.error("The UI class is not initialized.")}}class m{constructor(){this.rule=i.None,this.customMod=0,this.loadFromSettings()}loadFromSettings(){e.debug("Loading Leap Year Settings");const t=u.LoadLeapYearRules();t&&(t.hasOwnProperty("rule")&&(this.rule=t.rule),t.hasOwnProperty("customMod")&&(this.customMod=t.customMod))}isLeapYear(e){return this.rule===i.Gregorian?e%4==0&&(e%100!=0||e%100==0&&e%400==0):this.rule===i.Custom&&e%this.customMod==0}howManyLeapYears(e){let t=0;return this.rule===i.Gregorian?t=Math.floor(e/4)-Math.floor(e/100)+Math.floor(e/400):this.rule===i.Custom&&0!==this.customMod&&(t=Math.floor(e/this.customMod)),this.isLeapYear(e)&&t>0&&(t-=1),t}previousLeapYear(e){if(this.rule===i.Gregorian||this.rule===i.Custom&&0!==this.customMod){let t=e;for(;Number.isInteger(t)&&!this.isLeapYear(t);)t--;return t}return null}fraction(e){const t=this.previousLeapYear(e);if(null!==t){const n=e%t;return this.rule===i.Gregorian?n/4:n/this.customMod}return 0}}class d{constructor(e=24,t=60,n=60){this.seconds=0,this.combatRunning=!1,this.hoursInDay=e,this.minutesInHour=t,this.secondsInMinute=n,this.gameTimeRatio=1,this.secondsPerDay=this.hoursInDay*this.minutesInHour*this.secondsInMinute}clone(){const e=new d(this.hoursInDay,this.minutesInHour,this.secondsInMinute);return e.seconds=this.seconds,e.gameTimeRatio=this.gameTimeRatio,e.combatRunning=this.combatRunning,e}getCurrentTime(){let e=this.seconds,t=0,n=0;return e>=this.secondsInMinute&&(t=Math.floor(e/this.secondsInMinute),e-=t*this.secondsInMinute),t>=this.minutesInHour&&(n=Math.floor(t/this.minutesInHour),t-=n*this.minutesInHour),{hour:n<10?`0${n}`:n.toString(),minute:t<10?`0${t}`:t.toString(),second:e<10?`0${e}`:e.toString()}}setTime(e=0,t=0,n=0){this.seconds=e*this.minutesInHour*this.secondsInMinute+t*this.secondsInMinute+n}changeTime(t=0,n=0,s=0){const a=t*this.minutesInHour*this.secondsInMinute+n*this.secondsInMinute+s,i=this.seconds+a;return e.debug(`Checking if ${i} seconds is valid`),i>=this.secondsPerDay?(e.debug("More time than in a day, changing time again with new seconds "+(i-this.secondsPerDay)),this.seconds=0,this.changeTime(0,0,i-this.secondsPerDay)+1):i<0?(this.seconds=this.secondsPerDay,this.changeTime(0,0,i)+-1):(e.debug(`Updating seconds to ${i}`),this.seconds=i,0)}getTotalSeconds(e,t=!0){return e*this.hoursInDay*this.minutesInHour*this.secondsInMinute+(t?this.seconds:0)}getClockClass(){return void 0!==this.keeper?game.paused||this.combatRunning?"paused":"go":"stopped"}async setWorldTime(t){let n=t-game.time.worldTime;const s=await game.time.advance(n);e.debug(`Set New Game World Time: ${s}`)}startTimeKeeper(){void 0===this.keeper&&(e.debug("Starting the built in Time Keeper"),this.keeper=window.setInterval(this.timeKeeper.bind(this),3e4),this.timeKeeper())}stopTimeKeeper(){void 0!==this.keeper&&(e.debug("Stopping the built in Time Keeper"),clearInterval(this.keeper),this.keeper=void 0,this.updateUsers())}timeKeeper(){var t,n;if(this.updateUsers(),game.paused||this.combatRunning)e.debug("Game Paused or combat started, not updating time.");else{e.debug("Updating Time...");const s=30*this.gameTimeRatio,a=this.changeTime(0,0,s);0!==a&&(null===(t=j.instance.currentYear)||void 0===t||t.changeDay(a)),null===(n=j.instance.currentYear)||void 0===n||n.syncTime()}}updateUsers(){if(u.IsGm()){const t={type:o.time,data:{clockClass:this.getClockClass()}};e.debug(`Update Users Clock Class: ${t.data.clockClass}`),game.socket.emit(n,t),j.instance.processSocket(t)}}}class g{constructor(e){this.prefix="",this.postfix="",this.months=[],this.weekdays=[],this.showWeekdayHeadings=!0,this.firstWeekday=0,this.timeChangeTriggered=!1,this.combatChangeTriggered=!1,this.generalSettings={gameWorldTimeIntegration:r.None,showClock:!1,playersAddNotes:!1},this.seasons=[],this.moons=[],this.numericRepresentation=e,this.selectedYear=e,this.visibleYear=e,this.leapYearRule=new m,this.time=new d}toTemplate(){const e=this.getMonth(),t=this.getMonth("selected"),n=this.getMonth("visible");let s="",a="",i="",o=[],c=[];if(t){s=t.name;const e=t.getDay("selected");e&&(a=e.name)}else if(e){s=e.name;const t=e.getDay();if(t){if(a=t.name,this.showWeekdayHeadings&&this.weekdays.length){const n=this.dayOfTheWeek(this.numericRepresentation,e.numericRepresentation,t.numericRepresentation);i=this.weekdays[n].name}if(this.moons.length)for(let e=0;e<this.moons.length;e++)o.push({name:this.moons[e].name,color:this.moons[e].color,phase:this.moons[e].getMoonPhase(this,"current")});j.instance&&(c=j.instance.notes.filter((n=>n.isVisible(this.numericRepresentation,e.numericRepresentation,t.numericRepresentation))))}}const h=this.getCurrentSeason();let l=[];return n&&(l=this.daysIntoWeeks(n,this.visibleYear,this.weekdays.length)),{display:this.getDisplayName(),selectedDisplayYear:this.getDisplayName(!0),selectedDisplayMonth:s,selectedDisplayDay:a,selectedDayOfWeek:i,selectedDayMoons:o,selectedDayNotes:c,numericRepresentation:this.numericRepresentation,weekdays:this.weekdays.map((e=>e.toTemplate())),showWeekdayHeaders:this.showWeekdayHeadings,firstWeekday:this.firstWeekday,visibleMonth:null==n?void 0:n.toTemplate(this.leapYearRule.isLeapYear(this.visibleYear)),showClock:this.generalSettings.showClock,clockClass:this.time.getClockClass(),showTimeControls:this.generalSettings.showClock&&this.generalSettings.gameWorldTimeIntegration!==r.ThirdParty,showDateControls:this.generalSettings.gameWorldTimeIntegration!==r.ThirdParty,currentTime:this.time.getCurrentTime(),currentSeasonName:h.name,currentSeasonColor:h.color,weeks:l}}daysIntoWeeks(e,t,n){const s=[],a=this.visibleMonthStartingDayOfWeek(),i=this.leapYearRule.isLeapYear(t),o=e.getDaysForTemplate(i);if(o.length&&n>0){const e=[];let t=0;for(let s=0;s<n;s++)if(s<a)e.push(!1);else{const n=s-a;n<o.length?(e.push(o[n]),t++):e.push(!1)}s.push(e);const i=Math.ceil((o.length-t)/n);for(let e=0;e<i;e++){const a=[];for(let s=0;s<n;s++){const i=t+e*n+s;i<o.length?a.push(o[i]):a.push(!1)}s.push(a)}}return s}clone(){const e=new g(this.numericRepresentation);return e.postfix=this.postfix,e.prefix=this.prefix,e.selectedYear=this.selectedYear,e.visibleYear=this.visibleYear,e.months=this.months.map((e=>e.clone())),e.weekdays=this.weekdays.map((e=>e.clone())),e.leapYearRule.rule=this.leapYearRule.rule,e.leapYearRule.customMod=this.leapYearRule.customMod,e.showWeekdayHeadings=this.showWeekdayHeadings,e.firstWeekday=this.firstWeekday,e.time=this.time.clone(),e.generalSettings.gameWorldTimeIntegration=this.generalSettings.gameWorldTimeIntegration,e.generalSettings.showClock=this.generalSettings.showClock,e.generalSettings.playersAddNotes=this.generalSettings.playersAddNotes,e.seasons=this.seasons.map((e=>e.clone())),e.moons=this.moons.map((e=>e.clone())),e}getDisplayName(e=!1){return e?`${this.prefix}${this.selectedYear.toString()}${this.postfix}`:`${this.prefix}${this.visibleYear.toString()}${this.postfix}`}getMonth(e="current"){const t=e.toLowerCase();return this.months.find((e=>e[t]))}resetMonths(e="current"){const t=e.toLowerCase();this.months.forEach((n=>{"visible"!==e&&n.resetDays(e),n[t]=!1}))}updateMonth(t,n,s){const a=n.toLowerCase(),i="current"===a?this.numericRepresentation:"visible"===a?this.visibleYear:this.selectedYear,o=this.leapYearRule.isLeapYear(i);if(this.resetMonths(n),(-1===t||t>=this.months.length)&&(t=this.months.length-1),o&&0===this.months[t].numberOfLeapYearDays||!o&&0===this.months[t].numberOfDays)return e.debug(`The month "${this.months[t].name}" has no days skipping to ${s?"next":"previous"} month.`),this.months[t][a]=!0,this.changeMonth(s?1:-1,n);this.months[t][a]=!0,"current"===a&&(this.resetMonths("visible"),e.debug(`New Month: ${this.months[t].name}`),this.months[t].visible=!0,this.months[t].updateDay(s?0:-1,o))}changeYear(t,n=!0,s="visible"){const a=s.toLowerCase();if("visible"===a?this.visibleYear=this.visibleYear+t:"selected"===a?this.selectedYear=this.selectedYear+t:(this.numericRepresentation=this.numericRepresentation+t,this.visibleYear=this.numericRepresentation,e.debug(`New Year: ${this.numericRepresentation}`)),this.months.length&&n){let e=0;-1===t&&(e=this.months.length-1),this.updateMonth(e,s,t>0)}}changeMonth(t,n="visible"){const s=n.toLowerCase(),a=t>0;for(let i=0;i<this.months.length;i++)if(this.months[i][s]){if(a&&i+t>=this.months.length){e.debug(`Advancing the ${s} month (${i}) by more months (${t}) than there are in the year (${this.months.length}), advancing the year by 1`),this.changeYear(1,!0,s);const n=t-(this.months.length-i);n>0&&this.changeMonth(n,s)}else if(!a&&i+t<0){this.changeYear(-1,!0,s);const e=t+i+1;e<0&&this.changeMonth(e,s)}else this.updateMonth(i+t,n,a);break}}changeDay(t,n="current"){const s=n.toLowerCase(),a="current"===s?this.numericRepresentation:this.selectedYear,i=this.leapYearRule.isLeapYear(a),o=this.getMonth();if(o){const n=t>0;let a=1;const r=o.getDay(s);r&&(a=r.numericRepresentation);const c=i?o.numberOfLeapYearDays:o.numberOfDays;n&&a+t>c?(e.debug(`Advancing the ${s} day (${a}) by more days (${t}) than there are in the month (${c}), advancing the month by 1`),this.changeMonth(1,s),this.changeDay(t-(c-a)-1,s)):!n&&a+t<1?(e.debug(`Advancing the ${s} day (${a}) by less days (${t}) than there are in the month (${c}), advancing the month by -1`),this.changeMonth(-1,s),this.changeDay(t+a,s)):o.changeDay(t,i,s)}}changeTime(e,t,n=1){t=t.toLowerCase();const s=e?n:-1*n;let a=0;this.timeChangeTriggered=!0,"hour"===t?a=this.time.changeTime(s):"minute"===t?a=this.time.changeTime(0,s):"second"===t&&(a=this.time.changeTime(0,0,s)),0!==a&&this.changeDay(a)}totalNumberOfDays(e=!1,t=!1){let n=0;return this.months.forEach((s=>{(s.intercalary&&s.intercalaryInclude||!s.intercalary||t)&&(n+=e?s.numberOfLeapYearDays:s.numberOfDays)})),n}visibleMonthStartingDayOfWeek(){const e=this.getMonth("visible");return e?e.intercalary&&!e.intercalaryInclude?0:this.dayOfTheWeek(this.visibleYear,e.numericRepresentation,1):0}dayOfTheWeek(e,t,n){return this.weekdays.length?((this.dateToDays(e,t,n)-1+this.firstWeekday)%this.weekdays.length+this.weekdays.length)%this.weekdays.length:0}dateToDays(e,t,n,s=!1,a=!1){const i=this.totalNumberOfDays(!1,a),o=this.totalNumberOfDays(!0,a)-i,r=this.leapYearRule.howManyLeapYears(e),c=this.leapYearRule.isLeapYear(e);let h=i*e+r*o;const l=this.months.findIndex((e=>e.numericRepresentation===t));for(let e=0;e<this.months.length;e++)e<l&&(a||!this.months[e].intercalary||this.months[e].intercalary&&this.months[e].intercalaryInclude)&&(h+=c?this.months[e].numberOfLeapYearDays:this.months[e].numberOfDays);return n<1&&(n=1),h+=n,s&&(h+=o),h}async syncTime(){if(u.IsGm()&&(this.generalSettings.gameWorldTimeIntegration===r.Self||this.generalSettings.gameWorldTimeIntegration===r.Mixed)){e.debug("Year.syncTime()");const t=this.getMonth();if(t){const e=t.getDay(),n=this.dateToDays(this.numericRepresentation,t.numericRepresentation,e?e.numericRepresentation:1,!0,!0)-1,s=this.time.getTotalSeconds(n);this.timeChangeTriggered=!0,await this.time.setWorldTime(s)}}}secondsToDate(e){let t=e,n=0,s=0,a=0,i=0,o=0;t>=this.time.secondsInMinute&&(n=Math.floor(t/this.time.secondsInMinute),t-=n*this.time.secondsInMinute),n>=this.time.minutesInHour&&(s=Math.floor(n/this.time.minutesInHour),n-=s*this.time.minutesInHour);let r=0;s>=this.time.hoursInDay&&(r=Math.floor(s/this.time.hoursInDay),s-=r*this.time.hoursInDay),r++;let c=0;for(;r>0;){let e=this.leapYearRule.isLeapYear(o);for(let t=0;t<this.months.length;t++){const n=e?this.months[t].numberOfLeapYearDays:this.months[t].numberOfDays;if(i=t,r<n&&(a=r),c+=n,r-=n,r<=0)break}r>0&&o++}return{year:o,month:i,day:a,hour:s,minute:n,seconds:t}}updateTime(e){let t=this.leapYearRule.isLeapYear(e.year);this.numericRepresentation=e.year,this.updateMonth(e.month,"current",!0),this.months[e.month].updateDay(e.day-1,t),this.time.setTime(e.hour,e.minute,e.seconds)}setFromTime(t,n){if(e.debug("Year.setFromTime()"),0!==n)if(this.generalSettings.gameWorldTimeIntegration!==r.Self&&this.generalSettings.gameWorldTimeIntegration!==r.Mixed||!this.timeChangeTriggered&&!this.combatChangeTriggered)if(this.generalSettings.gameWorldTimeIntegration!==r.ThirdParty&&this.generalSettings.gameWorldTimeIntegration!==r.Mixed||this.timeChangeTriggered)e.debug("Not Applying Change!");else{e.debug("Tracking Rule: ThirdParty.\nTriggered Change: External Change. Applying Change!");const n=this.secondsToDate(t);this.updateTime(n),u.IsGm()&&j.instance.primary&&u.SaveCurrentDate(this).catch(e.error)}else if(e.debug("Tracking Rule: Self.\nTriggered Change: Simple Calendar/Combat Turn. Applying Change!"),!this.timeChangeTriggered){const n=this.secondsToDate(t);this.updateTime(n),u.IsGm()&&j.instance.primary&&u.SaveCurrentDate(this).catch(e.error)}e.debug("Resetting time change triggers."),this.timeChangeTriggered=!1,this.combatChangeTriggered=!1}getCurrentSeason(){let e=0,t=0;const n=this.getMonth("visible");if(n){e=this.months.findIndex((e=>e.numericRepresentation===n.numericRepresentation));const s=n.getDay("selected")||n.getDay();t=s?s.numericRepresentation:1}if(t>0&&e>=0){let n=null;for(let s=0;s<this.seasons.length;s++){const a=this.months.findIndex((e=>e.numericRepresentation===this.seasons[s].startingMonth));(a===e&&this.seasons[s].startingDay<=t||a<e)&&(n=this.seasons[s])}if(null===n&&(n=this.seasons[this.seasons.length-1]),n)return{name:n.name,color:"custom"===n.color?n.customColor:n.color}}return{name:"",color:""}}}class p{constructor(e,t=""){this.name="",this.numericRepresentation=0,this.current=!1,this.selected=!1,this.numericRepresentation=e,this.name=t,""===this.name&&this.numericRepresentation&&(this.name=this.numericRepresentation.toString())}toTemplate(){return{name:this.name,numericRepresentation:this.numericRepresentation,current:this.current,selected:this.selected}}clone(){const e=new p(this.numericRepresentation,this.name);return e.current=this.current,e.selected=this.selected,e}}class y{constructor(e,t,n=0,s=0,a=0){this.days=[],this.numberOfDays=0,this.numberOfLeapYearDays=0,this.numericRepresentationOffset=0,this.intercalary=!1,this.intercalaryInclude=!1,this.current=!1,this.visible=!1,this.selected=!1,this.showAdvanced=!1,this.name=e.trim(),this.numericRepresentation=t,this.numericRepresentationOffset=n,""===this.name&&(this.name=t.toString()),this.numberOfLeapYearDays=a<1?s:a,this.numberOfDays=s,this.populateDays(a>s?a:s)}populateDays(e,t=null){for(let n=1;n<=e;n++){const e=new p(n+this.numericRepresentationOffset);n===t&&(e.current=!0),this.days.push(e)}}getDisplayName(){return this.numericRepresentation.toString()===this.name?this.name:`${this.name} (${this.numericRepresentation})`}toTemplate(e=!1){return{display:this.getDisplayName(),name:this.name,numericRepresentation:this.numericRepresentation,numericRepresentationOffset:this.numericRepresentationOffset,current:this.current,visible:this.visible,selected:this.selected,days:this.getDaysForTemplate(e),numberOfDays:this.numberOfDays,numberOfLeapYearDays:this.numberOfLeapYearDays,intercalary:this.intercalary,intercalaryInclude:this.intercalaryInclude,showAdvanced:this.showAdvanced}}clone(){const e=new y(this.name,this.numericRepresentation,this.numericRepresentationOffset);return e.current=this.current,e.selected=this.selected,e.visible=this.visible,e.days=this.days.map((e=>e.clone())),e.numberOfDays=this.numberOfDays,e.numberOfLeapYearDays=this.numberOfLeapYearDays,e.intercalary=this.intercalary,e.intercalaryInclude=this.intercalaryInclude,e.showAdvanced=this.showAdvanced,e}getDay(e="current"){const t=e.toLowerCase();return this.days.find((e=>e[t]))}getDaysForTemplate(t=!1){let n=this.days.map((e=>e.toTemplate()));if(e.debug(`Getting Day Templates for ${this.name}, there are a max of ${n.length} days`),this.numberOfDays!==this.numberOfLeapYearDays){const s=this.numberOfLeapYearDays-this.numberOfDays;if(e.debug(`There is a difference of "${s}" between the normal number of days and number of days in a leap year.`),s>0&&!t)return e.debug(`It is not a leap year so trim off the extra leap days to get ${n.length-s} days`),n.slice(0,n.length-s);if(s<0&&t)return e.debug(`It is a leap year so trim off the extra normal days to get ${n.length+s} days`),n.slice(0,n.length-Math.abs(s))}return n}changeDay(t,n=!1,s="current"){const a=this.getDay(s);let i=0;const o=n?this.numberOfLeapYearDays:this.numberOfDays;if(a){let r=this.days.findIndex((e=>e.numericRepresentation===a.numericRepresentation+t));t>0&&r===o||t<0&&r<0||r<0?(e.debug(`On ${t>0?"last":"first"} day of the month, changing to ${t>0?"next":"previous"} month`),this.resetDays(s),i=t>0?1:-1):(e.debug(`New Day: ${this.days[r].numericRepresentation}`),this.updateDay(r,n,s))}return i}resetDays(e="current"){const t=e.toLowerCase();this.days.forEach((e=>{e[t]=!1}))}updateDay(e,t=!1,n="current"){const s=n.toLowerCase(),a=t?this.numberOfLeapYearDays:this.numberOfDays;this.resetDays(n),e<0||e>=a?this.days[a-1][s]=!0:this.days[e][s]=!0}}class f{constructor(){this.year=0,this.month=0,this.monthDisplay="",this.day=0,this.title="",this.content="",this.author="",this.playerVisible=!1,this.repeats=a.Never,this.id=window.crypto.getRandomValues(new Uint32Array(1))[0].toString(16)}toTemplate(){return{title:this.title,content:this.content,author:this.author,monthDisplay:this.monthDisplay,id:this.id}}loadFromConfig(e){this.year=e.year,this.month=e.month,this.day=e.day,this.monthDisplay=e.monthDisplay,this.title=e.title,this.content=e.content,this.author=e.author,this.playerVisible=e.playerVisible,this.id=e.id,this.repeats=e.repeats}clone(){const e=new f;return e.year=this.year,e.month=this.month,e.day=this.day,e.monthDisplay=this.monthDisplay,e.title=this.title,e.content=this.content,e.author=this.author,e.playerVisible=this.playerVisible,e.id=this.id,e.repeats=this.repeats,e}isVisible(e,t,n){const s=u.IsGm()||!u.IsGm()&&this.playerVisible;let i=!1;if(this.repeats===a.Weekly){let s=0,a=1;j.instance.currentYear&&(s=j.instance.currentYear.dayOfTheWeek(this.year,this.month,this.day),a=j.instance.currentYear.dayOfTheWeek(e,t,n)),i=s===a}else i=this.repeats===a.Monthly?this.day===n:this.repeats===a.Yearly?this.month===t&&this.day===n:this.year===e&&this.month===t&&this.day===n;return s&&i}}class b{constructor(e,t){this.numericRepresentation=e,this.name=t}toTemplate(){let e=this.name.substring(0,1).toUpperCase();return this.name.length>1&&(e+=this.name.substring(1,2).toLowerCase()),{name:this.name,firstCharacter:e,numericRepresentation:this.numericRepresentation}}clone(){return new b(this.numericRepresentation,this.name)}}class w{constructor(e,t,n){this.color="#ffffff",this.customColor="",this.startingMonth=-1,this.startingDay=-1,this.name=e,this.startingMonth=t,this.startingDay=n}clone(){const e=new w(this.name,this.startingMonth,this.startingDay);return e.color=this.color,e.customColor=this.customColor,e}toTemplate(e){const t={name:this.name,startingMonth:this.startingMonth,startingDay:this.startingDay,color:this.color,customColor:this.customColor,dayList:[]},n=e.months.find((e=>e.numericRepresentation===t.startingMonth));return n&&(t.dayList=n.days.map((e=>e.toTemplate()))),t}}class C{constructor(e,t){this.phases=[],this.firstNewMoon={yearReset:h.None,yearX:0,year:0,month:1,day:1},this.color="#ffffff",this.cycleDayAdjust=0,this.name=e,this.cycleLength=t,this.phases.push({name:game.i18n.localize("FSC.Moon.Phase.New"),length:3.69,icon:c.NewMoon,singleDay:!0})}clone(){const e=new C(this.name,this.cycleLength);return e.phases=this.phases.map((e=>({name:e.name,length:e.length,icon:e.icon,singleDay:e.singleDay}))),e.firstNewMoon.yearReset=this.firstNewMoon.yearReset,e.firstNewMoon.yearX=this.firstNewMoon.yearX,e.firstNewMoon.year=this.firstNewMoon.year,e.firstNewMoon.month=this.firstNewMoon.month,e.firstNewMoon.day=this.firstNewMoon.day,e.color=this.color,e.cycleDayAdjust=this.cycleDayAdjust,e}toTemplate(e){const t={name:this.name,cycleLength:this.cycleLength,firstNewMoon:this.firstNewMoon,phases:this.phases,color:this.color,cycleDayAdjust:this.cycleDayAdjust,dayList:[]},n=e.months.find((e=>e.numericRepresentation===t.firstNewMoon.month));return n&&(t.dayList=n.days.map((e=>e.toTemplate()))),t}updatePhaseLength(){let e=0,t=0;for(let n=0;n<this.phases.length;n++)this.phases[n].singleDay?t++:e++;const n=Number(((this.cycleLength-t)/e).toPrecision(6));this.phases.forEach((e=>{e.singleDay?e.length=1:e.length=n}))}getMoonPhase(t,n="current",s=null){let a="current"===(n=n.toLowerCase())?t.numericRepresentation:"selected"===n?t.selectedYear:t.visibleYear,i=t.dateToDays(this.firstNewMoon.year,this.firstNewMoon.month,this.firstNewMoon.day,!0,!0)-1;const o=t.getMonth(n);if(o){const r="visible"!==n?o.getDay(n):s;let c=o.numericRepresentation,l=r?r.numericRepresentation:1,u=0;if(this.firstNewMoon.yearReset===h.LeapYear){let n=t.leapYearRule.previousLeapYear(a);null!==n&&(e.debug(`Resetting moon calculation first day to year: ${n}`),i=t.dateToDays(n,this.firstNewMoon.month,this.firstNewMoon.day,!0,!0)-1,a!==n&&(u+=t.leapYearRule.fraction(a)))}else if(this.firstNewMoon.yearReset===h.XYears){const e=a%this.firstNewMoon.yearX;if(0!==e){let n=a-e;i=t.dateToDays(n,this.firstNewMoon.month,this.firstNewMoon.day,!0,!0)-1,u+=e/this.firstNewMoon.yearX}}const m=(t.dateToDays(a,c,l,!0,!0)-1-i+u)/this.cycleLength;let d=(m-Math.floor(m))*this.cycleLength+this.cycleDayAdjust,g=0,p=null;for(let e=0;e<this.phases.length;e++){const t=g+this.phases[e].length;if(d>=g&&d<t){p=this.phases[e];break}g=t}if(null!==p)return p}return this.phases[0]}}class D{static async importAboutTime(e){const t=game.settings.get("about-time","savedCalendar");e.time.hoursInDay=t.hours_per_day,e.time.minutesInHour=t.minutes_per_hour,e.time.secondsInMinute=t.seconds_per_minute,e.weekdays=[];for(let n=0;n<t.weekdays.length;n++)e.weekdays.push(new b(n+1,t.weekdays[n]));e.months=[];let n=1,s=1;for(let a in t.month_len)if(t.month_len.hasOwnProperty(a)){const i=new y(a,n,0,t.month_len[a].days[0],t.month_len[a].days[1]);t.month_len[a].intercalary?(i.numericRepresentation=-1*s,i.intercalary=!0,i.intercalaryInclude=!1,s++):n++,e.months.push(i)}if(e.leapYearRule.rule=i.None,"(year) => Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400)"===t.leap_year_rule)e.leapYearRule.rule=i.Gregorian;else{const n=t.leap_year_rule.match(/(\d)/g);n&&n.length&&"0"!==n[0]&&(e.leapYearRule.rule=i.Custom,e.leapYearRule.customMod=parseInt(n[0]))}const a=e.secondsToDate(game.time.worldTime);e.updateTime(a),await u.SaveYearConfiguration(e),await u.SaveMonthConfiguration(e.months),await u.SaveWeekdayConfiguration(e.weekdays),await u.SaveLeapYearRules(e.leapYearRule),await u.SaveTimeConfiguration(e.time),await u.SaveCurrentDate(e)}static async exportToAboutTime(e){const t={};for(let n=0;n<e.months.length;n++){let s=e.months[n].numberOfLeapYearDays;e.leapYearRule.rule===i.None&&(s=e.months[n].numberOfDays),t[e.months[n].name]={days:[e.months[n].numberOfDays,s],intercalary:e.months[n].intercalary}}const n={first_day:0,clock_start_year:0,has_year_0:!0,notes:{},hours_per_day:e.time.hoursInDay,minutes_per_hour:e.time.minutesInHour,seconds_per_minute:e.time.secondsInMinute,weekdays:e.weekdays.map((e=>e.name)),leap_year_rule:"(year) => 0",month_len:t,_month_len:{}};e.leapYearRule.rule===i.Gregorian?n.leap_year_rule="(year) => Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400)":e.leapYearRule.rule===i.Custom&&(n.leap_year_rule=`(year) => Math.floor(year / ${e.leapYearRule.customMod} ) + 1`),game.Gametime.DTC.saveUserCalendar(n),0!==game.settings.get("about-time","calendar")&&await game.settings.set("about-time","calendar",0)}static async importCalendarWeather(e){const t=game.settings.get("calendar-weather","dateTime");e.time.hoursInDay=t.dayLength,e.weekdays=[];for(let n=0;n<t.daysOfTheWeek.length;n++)e.weekdays.push(new b(n+1,t.daysOfTheWeek[n]));e.months=[];let n=1;for(let s=0;s<t.months.length;s++){let a=parseInt(t.months[s].length.toString()),i=parseInt(t.months[s].leapLength.toString());isNaN(a)&&(a=1),isNaN(i)&&(i=1);const o=new y(t.months[s].name,s+1,0,a,i);t.months[s].isNumbered||(o.numericRepresentation=-1*n,o.intercalary=!0,o.intercalaryInclude=!1,n++),e.months.push(o)}e.leapYearRule.rule=i.None,e.seasons=[];for(let n=0;n<t.seasons.length;n++){const s=new w(t.seasons[n].name,1,t.seasons[n].date.day+1);e.seasons.push(s)}e.moons=[];for(let n=0;n<t.moons.length;n++){const s=new C(t.moons[n].name,t.moons[n].cycleLength),a=e.secondsToDate(t.moons[n].referenceTime);s.firstNewMoon.year=a.year,s.firstNewMoon.month=a.month,s.firstNewMoon.day=a.day}const s=e.secondsToDate(game.time.worldTime);e.updateTime(s),await u.SaveYearConfiguration(e),await u.SaveMonthConfiguration(e.months),await u.SaveWeekdayConfiguration(e.weekdays),await u.SaveLeapYearRules(e.leapYearRule),await u.SaveTimeConfiguration(e.time),await u.SaveMoonConfiguration(e.moons),await u.SaveCurrentDate(e)}static async exportCalendarWeather(e){const t=game.settings.get("calendar-weather","dateTime"),n=[];for(let t=0;t<e.months.length;t++)n.push({name:e.months[t].name,length:e.months[t].numberOfDays,leapLength:e.months[t].numberOfLeapYearDays,isNumbered:!e.months[t].intercalary,abbrev:e.months[t].intercalary?e.months[t].name.substring(0,2):""});const s=[];for(let t=0;t<e.seasons.length;t++)s.push({name:e.seasons[t].name,color:"",dawn:6,dusk:19,humidity:"=",rolltable:"",temp:"=",date:{day:e.seasons[t].startingDay-1,month:"",combined:"-"+(e.seasons[t].startingDay-1)}});const a=[];for(let t=0;t<e.moons.length;t++)a.push({name:e.moons[t].name,cycleLength:e.moons[t].cycleLength,cyclePercent:0,lunarEclipseChange:0,solarEclipseChange:0,referencePercent:0,referenceTime:e.time.getTotalSeconds(e.dateToDays(e.moons[t].firstNewMoon.year,e.moons[t].firstNewMoon.month,e.moons[t].firstNewMoon.day,!0,!0)-1)});const i=e.getMonth(),o=null==i?void 0:i.getDay(),r=e.weekdays.map((e=>e.name)),c=e.dayOfTheWeek(e.numericRepresentation,i?i.numericRepresentation:1,o?o.numericRepresentation:1);t.months=n,t.daysOfTheWeek=r,t.year=e.numericRepresentation,t.currentMonth=i?i.numericRepresentation-1:0,t.day=o?o.numericRepresentation-1:0,t.numDayOfTheWeek=c,t.currentWeekday=r[c],t.era="",t.dayLength=e.time.hoursInDay,t.first_day=0,t.seasons=s,t.moons=a,await game.settings.set("calendar-weather","dateTime",t),await D.exportToAboutTime(e),window.location.reload()}}class M extends FormApplication{constructor(e){super(e),this.yearChanged=!1,this.generalSettings={defaultPlayerNoteVisibility:!0},this._tabs[0].active="generalSettings",this.year=e,this.generalSettings.defaultPlayerNoteVisibility=u.GetDefaultNoteVisibility()}static get defaultOptions(){const e=super.defaultOptions;return e.template="modules/foundryvtt-simple-calendar/templates/calendar-config.html",e.title="FSC.Configuration.Title",e.classes=["simple-calendar-configuration"],e.resizable=!0,e.tabs=[{navSelector:".tabs",contentSelector:"form",initial:"yearSettings"}],e.height=700,e.width=900,e}showApp(){this.render(!0)}closeApp(){this.close().catch(e.error)}updateApp(){this.render(!1)}getData(e){let t={...super.getData(e),defaultPlayerNoteVisibility:this.generalSettings.defaultPlayerNoteVisibility,currentYear:this.object,months:this.object.months.map((e=>e.toTemplate())),weekdays:this.object.weekdays.map((e=>e.toTemplate())),leapYearRules:{none:"FSC.Configuration.LeapYear.Rules.None",gregorian:"FSC.Configuration.LeapYear.Rules.Gregorian",custom:"FSC.Configuration.LeapYear.Rules.Custom"},leapYearRule:this.object.leapYearRule,showLeapYearCustomMod:this.object.leapYearRule.rule===i.Custom,showLeapYearMonths:this.object.leapYearRule.rule!==i.None,predefined:{gregorian:"FSC.Configuration.LeapYear.Rules.Gregorian",eberron:"Eberron",exandrian:"Exandrian",golarian:"Golarian",greyhawk:"Greyhawk",harptos:"Harptos","traveller-ic":"Traveller: Imperial Calendar",warhammer:"Warhammer"},timeTrackers:{none:"FSC.Configuration.General.None",self:"FSC.Configuration.General.Self","third-party":"FSC.Configuration.General.ThirdParty",mixed:"FSC.Configuration.General.Mixed"},importing:{showAboutTime:!1,showCalendarWeather:!1},seasons:this.object.seasons.map((e=>e.toTemplate(this.object))),seasonColors:[{value:"#ffffff",display:u.Localize("FSC.Configuration.Season.ColorWhite")},{value:"#fffce8",display:u.Localize("FSC.Configuration.Season.ColorSpring")},{value:"#f3fff3",display:u.Localize("FSC.Configuration.Season.ColorSummer")},{value:"#fff7f2",display:u.Localize("FSC.Configuration.Season.ColorFall")},{value:"#f2f8ff",display:u.Localize("FSC.Configuration.Season.ColorWinter")},{value:"custom",display:u.Localize("FSC.Configuration.Season.ColorCustom")}],moons:this.object.moons.map((e=>e.toTemplate(this.object))),moonIcons:{},moonYearReset:{none:"FSC.Configuration.Moon.YearResetNo","leap-year":"FSC.Configuration.Moon.YearResetLeap","x-years":"FSC.Configuration.Moon.YearResetX"}};const n=game.modules.get("calendar-weather"),s=game.modules.get("about-time");return t.importing.showCalendarWeather=void 0!==n&&n.active,t.importing.showAboutTime=void 0!==s&&s.active,t.moonIcons[c.NewMoon]=u.Localize("FSC.Moon.Phase.New"),t.moonIcons[c.WaxingCrescent]=u.Localize("FSC.Moon.Phase.WaxingCrescent"),t.moonIcons[c.FirstQuarter]=u.Localize("FSC.Moon.Phase.FirstQuarter"),t.moonIcons[c.WaxingGibbous]=u.Localize("FSC.Moon.Phase.WaxingGibbous"),t.moonIcons[c.Full]=u.Localize("FSC.Moon.Phase.Full"),t.moonIcons[c.WaningGibbous]=u.Localize("FSC.Moon.Phase.WaningGibbous"),t.moonIcons[c.LastQuarter]=u.Localize("FSC.Moon.Phase.LastQuarter"),t.moonIcons[c.WaningCrescent]=u.Localize("FSC.Moon.Phase.WaningCrescent"),t}_updateObject(e,t){return Promise.resolve(void 0)}activateListeners(e){super.activateListeners(e),e.hasOwnProperty("length")&&(e.find(".month-show-advanced").on("click",M.instance.inputChange.bind(this)),e.find("#scSubmit").on("click",M.instance.saveClick.bind(this)),e.find("#scApplyPredefined").on("click",M.instance.overwriteConfirmationDialog.bind(this,"predefined","")),e.find(".remove-month").on("click",M.instance.removeFromTable.bind(this,"month")),e.find(".remove-weekday").on("click",M.instance.removeFromTable.bind(this,"weekday")),e.find(".remove-season").on("click",M.instance.removeFromTable.bind(this,"season")),e.find(".remove-moon").on("click",M.instance.removeFromTable.bind(this,"moon")),e.find(".remove-moon-phase").on("click",M.instance.removeFromTable.bind(this,"moon-phase")),e.find(".month-add").on("click",M.instance.addToTable.bind(this,"month")),e.find(".weekday-add").on("click",M.instance.addToTable.bind(this,"weekday")),e.find(".season-add").on("click",M.instance.addToTable.bind(this,"season")),e.find(".moon-add").on("click",M.instance.addToTable.bind(this,"moon")),e.find(".moon-phase-add").on("click",M.instance.addToTable.bind(this,"moon-phase")),e.find("#scAboutTimeImport").on("click",M.instance.overwriteConfirmationDialog.bind(this,"tp-import","about-time")),e.find("#scAboutTimeExport").on("click",M.instance.overwriteConfirmationDialog.bind(this,"tp-export","about-time")),e.find("#scCalendarWeatherImport").on("click",M.instance.overwriteConfirmationDialog.bind(this,"tp-import","calendar-weather")),e.find("#scCalendarWeatherExport").on("click",M.instance.overwriteConfirmationDialog.bind(this,"tp-export","calendar-weather")),e.find(".general-settings input").on("change",M.instance.inputChange.bind(this)),e.find(".year-settings input").on("change",M.instance.inputChange.bind(this)),e.find(".year-settings select").on("change",M.instance.inputChange.bind(this)),e.find(".month-settings input").on("change",M.instance.inputChange.bind(this)),e.find(".weekday-settings input").on("change",M.instance.inputChange.bind(this)),e.find(".weekday-settings select").on("change",M.instance.inputChange.bind(this)),e.find(".leapyear-settings input").on("change",M.instance.inputChange.bind(this)),e.find(".leapyear-settings select").on("change",M.instance.inputChange.bind(this)),e.find(".time-settings input").on("change",M.instance.inputChange.bind(this)),e.find(".moon-settings input").on("change",M.instance.inputChange.bind(this)),e.find(".moon-settings select").on("change",M.instance.inputChange.bind(this)))}rebaseMonthNumbers(){let e=0,t=0;for(let n=0;n<this.object.months.length;n++){const s=this.object.months[n];s.intercalary?(t++,s.numericRepresentation=-1*t):(s.numericRepresentation=e+1,e=s.numericRepresentation)}}addToTable(e,t){switch(t.preventDefault(),e.toLowerCase()){case"month":const e=this.object.months.length+1;this.object.months.push(new y("New Month",e,0,30)),this.rebaseMonthNumbers();break;case"weekday":const n=this.object.weekdays.length+1;this.object.weekdays.push(new b(n,"New Weekday"));break;case"season":this.object.seasons.push(new w("New Season",1,1));break;case"moon":const s=new C("Moon",29.53059);s.firstNewMoon={yearReset:h.None,yearX:0,year:0,month:1,day:1};const a=Number(((s.cycleLength-4)/4).toPrecision(5));s.phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:a,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:a,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:a,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:a,icon:c.WaningCrescent,singleDay:!1}],this.object.moons.push(s);break;case"moon-phase":const i=t.currentTarget.getAttribute("data-moon-index");if(i){const e=parseInt(i);!isNaN(e)&&e<this.object.moons.length&&(this.object.moons[e].phases.push({name:"Phase",length:1,icon:c.NewMoon,singleDay:!1}),this.object.moons[e].updatePhaseLength())}}this.updateApp()}removeFromTable(e,t){t.preventDefault();const n=e.toLowerCase(),s=t.currentTarget.getAttribute("data-index");if(s&&"all"!==s){const e=parseInt(s);if(!isNaN(e)){switch(n){case"month":if(e<this.object.months.length){this.object.months.splice(e,1);for(let e=0;e<this.object.months.length;e++)this.object.months[e].numericRepresentation=e+1;this.rebaseMonthNumbers()}break;case"weekday":if(e<this.object.weekdays.length){this.object.weekdays.splice(e,1);for(let e=0;e<this.object.weekdays.length;e++)this.object.weekdays[e].numericRepresentation=e+1}break;case"season":e<this.object.seasons.length&&this.object.seasons.splice(e,1);break;case"moon":e<this.object.moons.length&&this.object.moons.splice(e,1);break;case"moon-phase":const n=t.currentTarget.getAttribute("data-moon-index");if(n){const t=parseInt(n);!isNaN(t)&&t<this.object.moons.length&&e<this.object.moons[t].phases.length&&(this.object.moons[t].phases.splice(e,1),this.object.moons[t].updatePhaseLength())}}this.updateApp()}}else if(s&&"all"===s){switch(n){case"month":this.object.months=[];break;case"weekday":this.object.weekdays=[];break;case"season":this.object.seasons=[];break;case"moon":this.object.moons=[];break;case"moon-phase":const e=t.currentTarget.getAttribute("data-moon-index");if(e){const t=parseInt(e);!isNaN(t)&&t<this.object.moons.length&&(this.object.moons[t].phases=[])}}this.updateApp()}}predefinedApplyConfirm(){const t=document.getElementById("scPreDefined").value;e.debug(`Overwriting the existing calendar configuration with the "${t}" configuration`);let n=0;switch(t){case"gregorian":const e=new Date;this.object.numericRepresentation=e.getFullYear(),this.object.prefix="",this.object.postfix="",this.object.months=[new y(u.Localize("FSC.Date.January"),1,0,31),new y(u.Localize("FSC.Date.February"),2,0,28,29),new y(u.Localize("FSC.Date.March"),3,0,31),new y(u.Localize("FSC.Date.April"),4,0,30),new y(u.Localize("FSC.Date.May"),5,0,31),new y(u.Localize("FSC.Date.June"),6,0,30),new y(u.Localize("FSC.Date.July"),7,0,31),new y(u.Localize("FSC.Date.August"),8,0,31),new y(u.Localize("FSC.Date.September"),9,0,30),new y(u.Localize("FSC.Date.October"),10,0,31),new y(u.Localize("FSC.Date.November"),11,0,30),new y(u.Localize("FSC.Date.December"),12,0,31)],this.object.showWeekdayHeadings=!0,this.object.firstWeekday=0,this.object.weekdays=[new b(1,u.Localize("FSC.Date.Sunday")),new b(2,u.Localize("FSC.Date.Monday")),new b(3,u.Localize("FSC.Date.Tuesday")),new b(4,u.Localize("FSC.Date.Wednesday")),new b(5,u.Localize("FSC.Date.Thursday")),new b(6,u.Localize("FSC.Date.Friday")),new b(7,u.Localize("FSC.Date.Saturday"))],this.object.seasons=[new w("Spring",3,20),new w("Summer",6,20),new w("Fall",9,22),new w("Winter",12,21)],this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.Gregorian,this.object.leapYearRule.customMod=0,this.object.months[e.getMonth()].current=!0,this.object.months[e.getMonth()].days[e.getDate()-1].current=!0,this.object.seasons[0].color="#fffce8",this.object.seasons[1].color="#f3fff3",this.object.seasons[2].color="#fff7f2",this.object.seasons[3].color="#f2f8ff",this.object.moons=[new C("Moon",29.53059)],this.object.moons[0].firstNewMoon.yearReset=h.None,this.object.moons[0].firstNewMoon.year=2e3,this.object.moons[0].firstNewMoon.month=1,this.object.moons[0].firstNewMoon.day=6,this.object.moons[0].cycleDayAdjust=.5,n=Number(((this.object.moons[0].cycleLength-4)/4).toPrecision(5)),this.object.moons[0].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}];break;case"eberron":this.object.numericRepresentation=998,this.object.prefix="",this.object.postfix=" YK",this.object.months=[new y("Zarantyr",1,0,28),new y("Olarune",2,0,28),new y("Therendor",3,0,28),new y("Eyre",4,0,28),new y("Dravago",5,0,28),new y("Nymm",6,0,28),new y("Lharvion",7,0,28),new y("Barrakas",8,0,28),new y("Rhaan",9,0,28),new y("Sypheros",10,0,28),new y("Aryth",11,0,28),new y("Vult",12,0,28)],this.object.showWeekdayHeadings=!0,this.object.firstWeekday=0,this.object.weekdays=[new b(1,"Sul"),new b(2,"Mol"),new b(3,"Zol"),new b(4,"Wir"),new b(5,"Zor"),new b(6,"Far"),new b(7,"Sar")],this.object.seasons=[],this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.None,this.object.leapYearRule.customMod=0,this.object.months[0].current=!0,this.object.months[0].days[0].current=!0,this.object.moons=[];break;case"exandrian":this.object.numericRepresentation=812,this.object.prefix="",this.object.postfix=" P.D.",this.object.months=[new y("Horisal",1,0,29),new y("Misuthar",2,0,30),new y("Dualahei",3,0,30),new y("Thunsheer",4,0,31),new y("Unndilar",5,0,28),new y("Brussendar",6,0,31),new y("Sydenstar",7,0,32),new y("Fessuran",8,0,29),new y("Quen'pillar",9,0,27),new y("Cuersaar",10,0,29),new y("Duscar",11,0,32)],this.object.showWeekdayHeadings=!0,this.object.firstWeekday=3,this.object.weekdays=[new b(1,"Miresen"),new b(2,"Grissen"),new b(3,"Whelsen"),new b(4,"Conthsen"),new b(5,"Folsen"),new b(6,"Yulisen"),new b(7,"Da'leysen")],this.object.seasons=[new w("Spring",3,13),new w("Summer",5,26),new w("Autumn",8,3),new w("Winter",11,2)],this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.None,this.object.leapYearRule.customMod=0,this.object.months[0].current=!0,this.object.months[0].days[0].current=!0,this.object.seasons[0].color="#fffce8",this.object.seasons[1].color="#f3fff3",this.object.seasons[2].color="#fff7f2",this.object.seasons[3].color="#f2f8ff",this.object.moons=[new C("Catha",33),new C("Ruidus",328)],this.object.moons[0].firstNewMoon.yearReset=h.None,this.object.moons[0].firstNewMoon.year=810,this.object.moons[0].firstNewMoon.month=1,this.object.moons[0].firstNewMoon.day=9,n=Number(((this.object.moons[0].cycleLength-4)/4).toPrecision(5)),this.object.moons[0].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}],this.object.moons[1].color="#ab82f3",this.object.moons[1].firstNewMoon.yearReset=h.None,this.object.moons[1].firstNewMoon.year=810,this.object.moons[1].firstNewMoon.month=3,this.object.moons[1].firstNewMoon.day=22,n=Number(((this.object.moons[1].cycleLength-4)/4).toPrecision(5)),this.object.moons[1].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}];break;case"golarian":this.object.numericRepresentation=4710,this.object.prefix="",this.object.postfix=" AR",this.object.months=[new y("Abadius",1,0,31),new y("Calistril",2,0,28,29),new y("Pharast",3,0,31),new y("Gozran",4,0,30),new y("Desnus",5,0,31),new y("Sarenith",6,0,30),new y("Erastus",7,0,31),new y("Arodus",8,0,31),new y("Rova",9,0,30),new y("Lamashan",10,0,31),new y("Neth",11,0,30),new y("Kuthona",12,0,31)],this.object.showWeekdayHeadings=!0,this.object.firstWeekday=6,this.object.weekdays=[new b(1,"Moonday"),new b(2,"Toilday"),new b(3,"Wealday"),new b(4,"Oathday"),new b(5,"Fireday"),new b(6,"Starday"),new b(7,"Sunday")],this.object.seasons=[new w("Spring",3,1),new w("Summer",6,1),new w("Fall",9,1),new w("Winter",12,1)],this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.Custom,this.object.leapYearRule.customMod=8,this.object.months[0].current=!0,this.object.months[0].days[0].current=!0,this.object.seasons[0].color="#fffce8",this.object.seasons[1].color="#f3fff3",this.object.seasons[2].color="#fff7f2",this.object.seasons[3].color="#f2f8ff",this.object.moons=[new C("Somal",29.5)],this.object.moons[0].firstNewMoon.yearReset=h.XYears,this.object.moons[0].firstNewMoon.yearX=4,this.object.moons[0].firstNewMoon.year=4700,this.object.moons[0].firstNewMoon.month=1,this.object.moons[0].firstNewMoon.day=8,n=Number(((this.object.moons[0].cycleLength-4)/4).toPrecision(5)),this.object.moons[0].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}];break;case"greyhawk":this.object.numericRepresentation=591,this.object.prefix="",this.object.postfix=" cy",this.object.months=[new y("Needfest",-1,0,7),new y("Fireseek",1,0,28),new y("Readying",2,0,28),new y("Coldeven",3,0,28),new y("Growfest",-2,0,7),new y("Planting",4,0,28),new y("Flocktime",5,0,28),new y("Wealsun",6,0,28),new y("Richfest",-3,0,7),new y("Reaping",7,0,28),new y("Goodmonth",8,0,28),new y("Harvester",9,0,28),new y("Brewfest",-4,0,7),new y("Patchwall",10,0,28),new y("Ready'reat",11,0,28),new y("Sunsebb",12,0,28)],this.object.months[0].intercalary=!0,this.object.months[4].intercalary=!0,this.object.months[8].intercalary=!0,this.object.months[12].intercalary=!0,this.object.showWeekdayHeadings=!0,this.object.firstWeekday=0,this.object.weekdays=[new b(1,"Starday"),new b(2,"Sunday"),new b(3,"Moonday"),new b(4,"Godsday"),new b(5,"Waterday"),new b(6,"Earthday"),new b(7,"Freeday")],this.object.seasons=[new w("Spring",2,1),new w("Low Summer",4,1),new w("High Summer",7,1),new w("Fall",10,1),new w("Winter",12,1)],this.object.seasons[0].color="#fffce8",this.object.seasons[1].color="#f3fff3",this.object.seasons[2].color="#f3fff3",this.object.seasons[3].color="#fff7f2",this.object.seasons[4].color="#f2f8ff",this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.None,this.object.leapYearRule.customMod=0,this.object.months[0].current=!0,this.object.months[0].days[0].current=!0,this.object.moons=[new C("Luna",28),new C("Celene",91)],this.object.moons[0].firstNewMoon.yearReset=h.None,this.object.moons[0].firstNewMoon.year=590,this.object.moons[0].firstNewMoon.month=1,this.object.moons[0].firstNewMoon.day=25,n=Number(((this.object.moons[0].cycleLength-4)/4).toPrecision(5)),this.object.moons[0].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}],this.object.moons[1].color="#7FFFD4",this.object.moons[1].firstNewMoon.yearReset=h.None,this.object.moons[1].firstNewMoon.year=590,this.object.moons[1].firstNewMoon.month=2,this.object.moons[1].firstNewMoon.day=12,n=Number(((this.object.moons[1].cycleLength-4)/4).toPrecision(5)),this.object.moons[1].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}];break;case"harptos":this.object.numericRepresentation=1495,this.object.prefix="",this.object.postfix=" DR",this.object.months=[new y("Hammer",1,0,30),new y("Midwinter",-1,0,1),new y("Alturiak",2,0,30),new y("Ches",3,0,30),new y("Tarsakh",4,0,30),new y("Greengrass",-2,0,1),new y("Mirtul",5,0,30),new y("Kythorn",6,0,30),new y("Flamerule",7,0,30),new y("Midsummer",-3,0,1),new y("Shieldmeet",-4,0,0,1),new y("Eleasis",8,0,30),new y("Eleint",9,0,30),new y("Higharvestide",-5,0,1),new y("Marpenoth",10,0,30),new y("Uktar",11,0,30),new y("Feast Of the Moon",-6,0,1),new y("Nightal",12,0,30)],this.object.months[1].intercalary=!0,this.object.months[5].intercalary=!0,this.object.months[9].intercalary=!0,this.object.months[10].intercalary=!0,this.object.months[13].intercalary=!0,this.object.months[16].intercalary=!0,this.object.showWeekdayHeadings=!1,this.object.firstWeekday=0,this.object.weekdays=[new b(1,"1st"),new b(2,"2nd"),new b(3,"3rd"),new b(4,"4th"),new b(5,"5th"),new b(6,"6th"),new b(7,"7th"),new b(8,"8th"),new b(9,"9th"),new b(10,"10th")],this.object.seasons=[new w("Spring",3,19),new w("Summer",6,20),new w("Fall",9,21),new w("Winter",12,20)],this.object.seasons[0].color="#fffce8",this.object.seasons[1].color="#f3fff3",this.object.seasons[2].color="#fff7f2",this.object.seasons[3].color="#f2f8ff",this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.Custom,this.object.leapYearRule.customMod=4,this.object.months[0].current=!0,this.object.months[0].days[0].current=!0,this.object.moons=[new C("Selûne",30.45)],this.object.moons[0].firstNewMoon.yearReset=h.LeapYear,this.object.moons[0].firstNewMoon.year=1372,this.object.moons[0].firstNewMoon.month=1,this.object.moons[0].firstNewMoon.day=16,this.object.moons[0].cycleDayAdjust=.5,n=Number(((this.object.moons[0].cycleLength-4)/4).toPrecision(5)),this.object.moons[0].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}];break;case"traveller-ic":this.object.numericRepresentation=1e3,this.object.prefix="",this.object.postfix="",this.object.months=[new y("Holiday",-1,0,1),new y("Year",1,1,364)],this.object.months[0].intercalary=!0,this.object.showWeekdayHeadings=!0,this.object.firstWeekday=0,this.object.weekdays=[new b(1,"Wonday"),new b(2,"Tuday"),new b(3,"Thirday"),new b(4,"Forday"),new b(5,"Fiday"),new b(6,"Sixday"),new b(7,"Senday")],this.object.seasons=[],this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.None,this.object.leapYearRule.customMod=0,this.object.months[0].current=!0,this.object.months[0].days[0].current=!0,this.object.moons=[];break;case"warhammer":this.object.numericRepresentation=2522,this.object.prefix="",this.object.postfix="",this.object.months=[new y("Hexenstag",-1,0,1),new y("Nachexen",1,0,32),new y("Jahrdrung",2,0,33),new y("Mitterfruhl",-2,0,1),new y("Pflugzeit",3,0,33),new y("Sigmarzeit",4,0,33),new y("Sommerzeit",5,0,33),new y("Sonnstill",-3,0,1),new y("Vorgeheim",6,0,33),new y("Geheimnistag",-4,0,1),new y("Nachgeheim",7,0,32),new y("Erntezeit",8,0,33),new y("Mittherbst",-5,0,1),new y("Brauzeit",9,0,33),new y("Kaldezeit",10,0,33),new y("Ulriczeit",11,0,33),new y("Mondstille",-6,0,1),new y("Vorhexen",12,0,33)],this.object.months[0].intercalary=!0,this.object.months[3].intercalary=!0,this.object.months[7].intercalary=!0,this.object.months[9].intercalary=!0,this.object.months[12].intercalary=!0,this.object.months[16].intercalary=!0,this.object.showWeekdayHeadings=!0,this.object.firstWeekday=0,this.object.weekdays=[new b(1,"Wellentag"),new b(2,"Aubentag"),new b(3,"Marktag"),new b(4,"Backertag"),new b(5,"Bezahltag"),new b(6,"Konistag"),new b(7,"Angestag"),new b(8,"Festag")],this.object.seasons=[new w("Spring",3,20),new w("Summer",6,20),new w("Fall",9,22),new w("Winter",12,21)],this.object.seasons[0].color="#fffce8",this.object.seasons[1].color="#f3fff3",this.object.seasons[2].color="#fff7f2",this.object.seasons[3].color="#f2f8ff",this.object.time.hoursInDay=24,this.object.time.minutesInHour=60,this.object.time.secondsInMinute=60,this.object.time.gameTimeRatio=1,this.object.leapYearRule.rule=i.None,this.object.leapYearRule.customMod=0,this.object.months[0].current=!0,this.object.months[0].days[0].current=!0,this.object.moons=[new C("Luna",25)],this.object.moons[0].firstNewMoon.yearReset=h.None,this.object.moons[0].firstNewMoon.year=2522,this.object.moons[0].firstNewMoon.month=1,this.object.moons[0].firstNewMoon.day=13,n=Number(((this.object.moons[0].cycleLength-4)/4).toPrecision(5)),this.object.moons[0].phases=[{name:u.Localize("FSC.Moon.Phase.New"),length:1,icon:c.NewMoon,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingCrescent"),length:n,icon:c.WaxingCrescent,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.FirstQuarter"),length:1,icon:c.FirstQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaxingGibbous"),length:n,icon:c.WaxingGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.Full"),length:1,icon:c.Full,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningGibbous"),length:n,icon:c.WaningGibbous,singleDay:!1},{name:u.Localize("FSC.Moon.Phase.LastQuarter"),length:1,icon:c.LastQuarter,singleDay:!0},{name:u.Localize("FSC.Moon.Phase.WaningCrescent"),length:n,icon:c.WaningCrescent,singleDay:!1}]}this.yearChanged=!0,this.updateApp()}inputChange(t){e.debug("Input has changed, updating configuration object");const n=t.currentTarget.id,s=t.currentTarget.getAttribute("class"),a=t.currentTarget.getAttribute("data-index");let o=t.currentTarget.value;const r=t.currentTarget.checked;if(o&&(o=o.trim()),n&&"-"!==n[0]){if(e.debug(`ID "${n}" change found`),"scDefaultPlayerVisibility"===n)this.generalSettings.defaultPlayerNoteVisibility=r;else if("scGameWorldTime"===n)this.object.generalSettings.gameWorldTimeIntegration=o;else if("scShowClock"===n)this.object.generalSettings.showClock=r;else if("scPlayersAddNotes"===n)this.object.generalSettings.playersAddNotes=r;else if("scCurrentYear"===n){const e=parseInt(o);isNaN(e)||(this.object.numericRepresentation=e,this.yearChanged=!0)}else if("scYearPreFix"===n)this.object.prefix=o;else if("scYearPostFix"===n)this.object.postfix=o;else if("scShowWeekdayHeaders"===n)this.object.showWeekdayHeadings=r;else if("scWeekdayFirstDay"===n){const e=parseInt(o);isNaN(e)||(this.object.firstWeekday=e)}else if("scLeapYearRule"===n)this.object.leapYearRule.rule=o;else if("scLeapYearCustomMod"===n){const e=parseInt(o);isNaN(e)||(this.object.leapYearRule.customMod=e)}else if("scHoursInDay"===n){const e=parseInt(o);isNaN(e)||(this.object.time.hoursInDay=e)}else if("scMinutesInHour"===n){const e=parseInt(o);isNaN(e)||(this.object.time.minutesInHour=e)}else if("scSecondsInMinute"===n){const e=parseInt(o);isNaN(e)||(this.object.time.secondsInMinute=e)}else if("scGameTimeRatio"===n){const e=parseFloat(o);isNaN(e)||(this.object.time.gameTimeRatio=e)}this.updateApp()}else if(s){if(e.debug(`CSS Class "${s}" change found`),a){const n=parseInt(a);if(e.debug(`Indexed item (${n}) changed.`),!isNaN(n))if("season-name"===s&&this.object.seasons.length>n)this.object.seasons[n].name=o;else if("season-custom"===s&&this.object.seasons.length>n)"#"!==o[0]&&(o="#"+o),this.object.seasons[n].customColor=o;else if("season-month"===s&&this.object.seasons.length>n){const e=parseInt(o);isNaN(e)||(this.object.seasons[n].startingMonth=e,this.object.seasons[n].startingDay=1)}else if("season-day"===s&&this.object.seasons.length>n){const e=parseInt(o);isNaN(e)||(this.object.seasons[n].startingDay=e)}else if("season-color"===s&&this.object.seasons.length>n)this.object.seasons[n].color=o;else if("month-show-advanced"===s&&this.object.months.length>n)this.object.months[n].showAdvanced=!this.object.months[n].showAdvanced;else if("month-name"===s&&this.object.months.length>n)this.object.months[n].name=o;else if("month-days"===s&&this.object.months.length>n){let e=parseInt(o);isNaN(e)||e===this.object.months[n].days.length||(this.object.months[n].numberOfDays=e,this.object.leapYearRule.rule===i.None&&(this.object.months[n].numberOfLeapYearDays=e),this.updateMonthDays(this.object.months[n]))}else if("month-intercalary"===s&&this.object.months.length>n){this.object.months[n].intercalary=r;const e=this.element.find(`.month-intercalary-include[data-index='${a}']`).parent().parent().parent();this.object.months[n].intercalary?e.removeClass("hidden"):e.addClass("hidden"),this.rebaseMonthNumbers()}else if("month-intercalary-include"===s&&this.object.months.length>n)this.object.months[n].intercalaryInclude=r,this.rebaseMonthNumbers();else if("month-numeric-representation-offset"===s&&this.object.months.length>n){let e=parseInt(o);isNaN(e)||(this.object.months[n].numericRepresentationOffset=e)}else if("weekday-name"===s&&this.object.weekdays.length>n)this.object.weekdays[n].name=o;else if("month-leap-days"===s&&this.object.months.length>n){const e=parseInt(o);isNaN(e)||e===this.object.months[n].numberOfLeapYearDays||(this.object.months[n].numberOfLeapYearDays=e,this.updateMonthDays(this.object.months[n]))}else if("moon-name"===s&&this.object.moons.length>n)this.object.moons[n].name=o;else if("moon-cycle-length"===s&&this.object.moons.length>n){const e=parseFloat(o);isNaN(e)||(this.object.moons[n].cycleLength=e,this.object.moons[n].updatePhaseLength())}else if("moon-cycle-adjustment"===s&&this.object.moons.length>n){const e=parseFloat(o);isNaN(e)||(this.object.moons[n].cycleDayAdjust=e)}else if("moon-year-reset"===s&&this.object.moons.length>n)this.object.moons[n].firstNewMoon.yearReset=o;else if("moon-year-x"===s&&this.object.moons.length>n){const e=parseInt(o);isNaN(e)||(this.object.moons[n].firstNewMoon.yearX=e)}else if("moon-year"===s&&this.object.moons.length>n){const e=parseInt(o);isNaN(e)||(this.object.moons[n].firstNewMoon.year=e)}else if("moon-month"===s&&this.object.moons.length>n){const e=parseInt(o);isNaN(e)||(this.object.moons[n].firstNewMoon.month=e,this.object.moons[n].firstNewMoon.day=1)}else if("moon-day"===s&&this.object.moons.length>n){const e=parseInt(o);isNaN(e)||(this.object.moons[n].firstNewMoon.day=e)}else if("moon-color"===s&&this.object.moons.length>n)"#"!==o[0]&&(o="#"+o),this.object.moons[n].color=o;else if("moon-phase-name"===s||"moon-phase-single-day"===s||"moon-phase-icon"===s){const e=t.currentTarget.getAttribute("data-moon-index");if(e){const t=parseInt(e);!isNaN(t)&&this.object.moons.length>t&&this.object.moons[t].phases.length>n&&("moon-phase-name"===s?this.object.moons[t].phases[n].name=o:"moon-phase-single-day"===s?(this.object.moons[t].phases[n].singleDay=r,this.object.moons[t].updatePhaseLength()):"moon-phase-icon"===s&&(this.object.moons[t].phases[n].icon=o))}}}this.updateApp()}}updateMonthDays(t){t.numberOfDays<0&&(t.numberOfDays=0),t.numberOfLeapYearDays<0&&(t.numberOfLeapYearDays=t.numberOfDays);const n=t.numberOfLeapYearDays>t.numberOfDays?t.numberOfLeapYearDays:t.numberOfDays,s=t.getDay();let a=null;s&&(s.numericRepresentation>=t.numberOfDays?(e.debug("The current day falls outside of the months new days, setting to first day of the month."),a=0):a=s.numericRepresentation),t.days=[],t.populateDays(n,a)}overwriteConfirmationDialog(e,t,n){n.preventDefault(),new Dialog({title:u.Localize("FSC.OverwriteConfirm"),content:u.Localize("FSC.OverwriteConfirmText"),buttons:{yes:{icon:'<i class="fas fa-check"></i>',label:u.Localize("FSC.Apply"),callback:M.instance.overwriteConfirmationYes.bind(this,e,t)},no:{icon:'<i class="fas fa-times"></i>',label:u.Localize("FSC.Cancel")}},default:"no"}).render(!0)}async overwriteConfirmationYes(e,t){"predefined"===e?this.predefinedApplyConfirm():"tp-import"===e?("about-time"===t?(await D.importAboutTime(this.object),this.updateApp()):"calendar-weather"===t&&(await D.importCalendarWeather(this.object),this.updateApp()),await u.SetImportRan(!0)):"tp-export"===e&&("about-time"===t?await D.exportToAboutTime(this.object):"calendar-weather"===t&&await D.exportCalendarWeather(this.object),await u.SetImportRan(!0))}async saveClick(t){t.preventDefault();try{if(this.object.leapYearRule.rule===i.None)for(let e=0;e<this.object.months.length;e++)this.object.months[e].numberOfLeapYearDays=this.object.months[e].numberOfDays;this.object.generalSettings.gameWorldTimeIntegration=document.getElementById("scGameWorldTime").value,await u.SaveGeneralSettings(this.object.generalSettings);const e=parseInt(document.getElementById("scCurrentYear").value);isNaN(e)||(this.object.numericRepresentation=e,this.object.selectedYear=e,this.object.visibleYear=e),await u.SaveYearConfiguration(this.object),await u.SaveMonthConfiguration(this.object.months),await u.SaveWeekdayConfiguration(this.object.weekdays),await u.SaveLeapYearRules(this.object.leapYearRule),await u.SaveTimeConfiguration(this.object.time),await u.SaveSeasonConfiguration(this.object.seasons),await u.SaveMoonConfiguration(this.object.moons),this.yearChanged&&await u.SaveCurrentDate(this.object);const t=document.getElementById("scDefaultPlayerVisibility").checked;await u.SetDefaultNoteVisibility(t),this.closeApp()}catch(t){e.error(t)}}}class S extends FormApplication{constructor(e,t=!1){super(e),this.richEditorSaved=!1,this.viewMode=t,this.updateNote=!1,this.editors.content={target:"content",changed:!1,initial:this.object.content,button:null,hasButton:!1,active:!1,mce:null,options:{target:null,height:200,save_onsavecallback:this.saveEditor.bind(this,"content")}},u.IsGm()||(this.object.playerVisible=!0)}static get defaultOptions(){const e=super.defaultOptions;return e.template="modules/foundryvtt-simple-calendar/templates/calendar-notes.html",e.title="FSC.Notes.DialogTitle",e.classes=["form","simple-calendar-note"],e.resizable=!0,e.closeOnSubmit=!1,e.width=500,e}getData(t){let n={...super.getData(t),isGM:u.IsGm(),viewMode:this.viewMode,richButton:!this.viewMode,canEdit:u.IsGm()||u.UserID()===this.object.author,noteYear:0,noteMonth:"",repeatOptions:{0:"FSC.Notes.Repeat.Never",1:"FSC.Notes.Repeat.Weekly",2:"FSC.Notes.Repeat.Monthly",3:"FSC.Notes.Repeat.Yearly"},repeats:this.object.repeats,repeatsText:"",authorName:this.object.author};if(!j.instance.currentYear||this.object.repeats!==a.Yearly&&this.object.repeats!==a.Monthly?n.noteYear=this.object.year:n.noteYear=j.instance.currentYear.visibleYear,j.instance.currentYear&&this.object.repeats===a.Monthly){const e=j.instance.currentYear.getMonth("visible");n.noteMonth=e?e.name:this.object.monthDisplay}else n.noteMonth=this.object.monthDisplay;if(n.repeatsText=`${u.Localize("FSC.Notes.Repeats")} ${u.Localize(n.repeatOptions[n.repeats])}`,game.users){e.debug(`Looking for users with the id "${this.object.author}"`);const t=game.users.get(this.object.author);t&&(n.authorName=t.name)}return n}setUpTextEditor(e){this.editors.content&&(null===this.editors.content.mce&&(this.editors.content.options.target=e.find(".editor .editor-content")[0]),!this.viewMode&&this.editors.content.options.target&&null===this.editors.content.button&&(this.editors.content.button=this.editors.content.options.target.nextElementSibling,this.editors.content.hasButton=this.editors.content.button&&this.editors.content.button.classList.contains("editor-edit"),this.editors.content.active=!this.viewMode,this.editors.content.hasButton&&(this.editors.content.button.onclick=S.instance.textEditorButtonClick.bind(this))),null===this.editors.content.mce&&this.editors.content.active&&this.activateEditor("content"))}activateEditor(e,t={},n=""){const s=this.editors[e];if(!s)throw new Error(`${e} is not a registered editor name!`);(t=mergeObject(s.options,t)).height=t.target.offsetHeight,TextEditor.create(t,n||s.initial).then((e=>{s.mce=e,s.changed=!1,s.active=!0,e.on("change",(e=>s.changed=!0))}))}textEditorButtonClick(e){this.editors.content&&(this.editors.content.button.style.display="none"),this.richEditorSaved=!1,this.activateEditor("content")}activateListeners(e){e.hasOwnProperty("length")&&(this.setUpTextEditor(e),this.element.find("#scNoteTitle").focus(),e.find("#scSubmit").on("click",S.instance.saveButtonClick.bind(S.instance)),e.find("#scNoteEdit").on("click",S.instance.editButtonClick.bind(S.instance)),e.find("#scNoteDelete").on("click",S.instance.deleteButtonClick.bind(S.instance)))}_updateObject(t,n){return this.object.content=n.content,e.debug("Update Object Called"),this.richEditorSaved=!0,Promise.resolve(!1)}showApp(){this.render(!0)}closeApp(){this.close().catch((t=>e.error(t)))}updateApp(){this.render(!0)}editButtonClick(e){e.preventDefault(),this.viewMode=!1,this.updateNote=!0,this.updateApp()}async deleteButtonClick(e){e.preventDefault(),new Dialog({title:u.Localize("FSC.DeleteConfirm"),content:u.Localize("FSC.DeleteConfirmText"),buttons:{yes:{icon:'<i class="fas fa-trash"></i>',label:u.Localize("FSC.Delete"),callback:S.instance.deleteConfirm.bind(this)},no:{icon:'<i class="fas fa-times"></i>',label:u.Localize("FSC.Cancel")}},default:"no"}).render(!0)}async deleteConfirm(){const t=u.LoadNotes().map((e=>{const t=new f;return t.loadFromConfig(e),t})),n=t.map((e=>e.id)).indexOf(this.object.id);n>-1&&n<t.length&&(t.splice(n,1),await u.SaveNotes(t).catch(e.error),this.closeApp())}async saveButtonClick(t){e.debug("Saving New Note"),t.preventDefault();let n=!0;if(this.editors.content&&this.editors.content.mce?""===this.editors.content.mce.getContent().trim()||this.editors.content.mce.isNotDirty||(this.object.content=this.editors.content.mce.getContent().trim(),this.richEditorSaved=!0):n=!1,this.richEditorSaved||n){const t=this.element.find("#scNoteTitle").val(),n=this.element.find("#scNoteVisibility").is(":checked");let s=this.element.find("#scNoteRepeats").find(":selected").val();if(s=s?parseInt(s.toString()):0,t){this.object.title=t.toString(),this.object.playerVisible=n,this.object.repeats=s;const a=u.LoadNotes().map((e=>{const t=new f;return t.loadFromConfig(e),t}));if(this.updateNote){const e=a.find((e=>e.id===this.object.id));e&&(e.title=this.object.title,e.content=this.object.content,e.playerVisible=this.object.playerVisible,e.repeats=this.object.repeats)}else a.push(this.object);await u.SaveNotes(a).catch(e.error),this.closeApp()}else u.UiNotification(u.Localize("FSC.Error.Note.NoTitle"),"error")}else u.UiNotification(u.Localize("FSC.Error.Note.RichText"),"warn")}}class Y{static Register(){Handlebars.registerHelper("day-has-note",Y.DayHasNotes),Handlebars.registerHelper("day-moon-phase",Y.DayMoonPhase)}static DayHasNotes(e){if(e.hash.hasOwnProperty("day")&&j.instance.currentYear){const t=e.hash.day.numericRepresentation,n=j.instance.currentYear.getMonth("visible"),s=j.instance.currentYear.visibleYear;if(n){const e=j.instance.notes.filter((e=>e.isVisible(s,n.numericRepresentation,t)));if(e.length){const t=e.length<100?e.length:99;let n=`${t} ${u.Localize("FSC.Configuration.General.Notes")}`;if(e.length<3){n=u.Localize("FSC.Configuration.General.Notes")+":\n";for(let t=0;t<e.length;t++)0!==t&&(n+="\n"),n+=`${e[t].title.replace(/"/g,"&quot;")}`}return`<span class="note-count" title="${n}">${t}</span>`}}}return""}static DayMoonPhase(e){if(e.hash.hasOwnProperty("day")&&j.instance.currentYear){const t=e.hash.day;let n="";for(let e=0;e<j.instance.currentYear.moons.length;e++){const s=j.instance.currentYear.moons[e].getMoonPhase(j.instance.currentYear,"visible",t);s&&(s.singleDay||t.selected||t.current)&&(n+=`<span class="moon-phase ${s.icon}" title="${j.instance.currentYear.moons[e].name} - ${s.name}" style="background-color: ${j.instance.currentYear.moons[e].color};"></span>`)}return n}return""}}class j extends Application{constructor(){super(),this.currentYear=null,this.notes=[],this.clockClass="stopped",this.timeUnits={second:!0,minute:!1,hour:!1},this.primary=!1,this.hasBeenResized=!1,this.compactView=!1,this.compactViewShowNotes=!1}static get defaultOptions(){e.debug("Simple Calendar -> defaultOptions()");const t=super.defaultOptions;return t.template="modules/foundryvtt-simple-calendar/templates/calendar.html",t.title="FSC.Title",t.classes=["simple-calendar"],t.resizable=!0,t}async init(){if(Y.Register(),u.RegisterSettings(),this.settingUpdate(),game.socket.on(n,this.processSocket.bind(this)),this.currentYear&&this.currentYear.time.updateUsers(),u.IsGm()){const e={type:o.primary,data:{primaryCheck:!0}};this.primaryCheckTimeout=window.setTimeout(this.primaryCheckTimeoutCall.bind(this),5e3),game.socket.emit(n,e)}}async primaryCheckTimeoutCall(){e.debug("No primary GM found, taking over as primary"),this.primary=!0;const t={type:o.primary,data:{amPrimary:this.primary}};game.socket.emit(n,t),await this.timeKeepingCheck(),this.updateApp()}async processSocket(t){e.debug(`Processing ${t.type} socket emit`),t.type===o.time?(this.clockClass=t.data.clockClass,this.updateApp()):t.type===o.journal?u.IsGm()&&this.primary&&(e.debug("Saving notes from user."),await u.SaveNotes(t.data.notes)):t.type===o.primary&&u.IsGm()&&(t.data.primaryCheck?(e.debug("Checking if I am the primary"),game.socket.emit(n,{type:o.primary,data:{amPrimary:this.primary}})):void 0!==t.data.amPrimary&&(t.data.amPrimary?(e.debug("A primary GM is all ready present."),window.clearTimeout(this.primaryCheckTimeout),this.primary=!1):e.debug("We are all ready waiting to take over as primary.")))}getData(e){let t=!1;if(this.currentYear){const e=this.currentYear.getMonth("selected");if(e){const n=e.getDay("selected");n&&!n.current&&(t=!0)}return{isGM:u.IsGm(),isPrimary:this.primary,addNotes:u.IsGm()||this.currentYear.generalSettings.playersAddNotes,currentYear:this.currentYear.toTemplate(),showSelectedDay:this.currentYear.visibleYear===this.currentYear.selectedYear,showCurrentDay:this.currentYear.visibleYear===this.currentYear.numericRepresentation,showSetCurrentDate:u.IsGm()&&t,notes:this.getNotesForDay(),clockClass:this.clockClass,timeUnits:this.timeUnits,compactView:this.compactView,compactViewShowNotes:this.compactViewShowNotes}}return{isGM:!1,isPrimary:this.primary,addNotes:!1,currentYear:new g(0).toTemplate(),showCurrentDay:!1,showSelectedDay:!1,showSetCurrentDate:t,notes:[],clockClass:this.clockClass,timeUnits:this.timeUnits,compactView:this.compactView,compactViewShowNotes:this.compactViewShowNotes}}getSceneControlButtons(e){let t=e.find((e=>"token"===e.name));t&&t.hasOwnProperty("tools")&&t.tools.push({name:"calendar",title:"FSC.ButtonTitle",icon:"fas fa-calendar",button:!0,onClick:j.instance.showApp.bind(j.instance)})}showApp(){this.hasBeenResized=!1,this.render(!0,{})}closeApp(){this.close().catch((t=>e.error(t)))}async minimize(){var e;this.compactViewShowNotes=!1,this.compactView=!this.compactView,null===(e=this.currentYear)||void 0===e||e.resetMonths("selected"),this.render(!0)}async maximize(){this.compactView=!1,this.render(!0)}_onResize(e){super._onResize(e),this.hasBeenResized=!0}setWidthHeight(e){if(this.hasBeenResized)return;let t=0,n=0;if(this.compactView){if(this.currentYear){let e,t=0,s=0;if(this.currentYear.showWeekdayHeadings)for(let e=0;e<this.currentYear.weekdays.length;e++)this.currentYear.weekdays[e].name.length>t&&(t=this.currentYear.weekdays[e].name.length);for(let e=0;e<this.currentYear.months.length;e++)this.currentYear.months[e].name.length>s&&(s=this.currentYear.months[e].name.length);e=this.currentYear.getDisplayName().length+1,n=7*(t+s+e+7)+62}const s=e.find(".compact-calendar .season-moon-info"),a=e.find(".compact-calendar .current-date .date"),i=e.find(".compact-calendar .current-time"),o=e.find(".compact-calendar .time-controls"),r=e.find(".compact-calendar .note-list .note");if(s){t+=s.outerHeight(!0)||0}if(a){const e=a.outerHeight(!0);let s=a.outerWidth(!1);t+=e||0,s&&(s+=32,s+=25,s>n&&(n=s))}if(i){t+=i.outerHeight(!0)||0}if(o){t+=o.outerHeight(!0)||0}if(r){const e=r.outerHeight(!0);t+=e?2*e:0}n<250&&(n=250),t+=32}else{const s=e.find(".calendar-row .calendar-display"),a=e.find(".calendar-row .controls"),i=e.find(".date-notes-header h2"),o=e.find(".date-notes-header .add-note");if(s){t+=s.outerHeight(!0)||0,n+=s.outerWidth(!0)||0}if(a){const e=a.outerHeight(!0);e&&e>t&&(t=e),n+=a.outerWidth(!0)||0}if(i&&o){const e=i.outerHeight(!0),s=(i.outerWidth(!0)||0)+(o.outerWidth(!0)||0);s>n&&(n=s),t+=(e||0)+24}n+=16,t+=106}this.setPosition({width:n,height:t})}ensureCurrentDateIsVisible(t){const n=t.find(".calendar"),s=n.outerHeight();if(s&&s>=500){const t=n.find(".day.current"),a=n.find(".day.selected");let i=null;if(a.length?i=a[0]:t.length&&(i=t[0]),null!==i){const t=n[0].getBoundingClientRect(),a=i.getBoundingClientRect();a.top>=t.top&&a.left>=t.left&&a.bottom<=t.bottom&&a.right<=t.right||(e.debug("The Current/Selected day is not in the viewport, updating the day list scroll top position."),n[0].scrollTop=a.top-t.top-s/2)}}}activateListeners(t){if(e.debug("Simple-Calendar activateListeners()"),t.hasOwnProperty("length")){if(this.setWidthHeight(t),this.compactView)this.element.find(".window-resizable-handle").hide(),t.find(".compact-calendar .season-moon-info .add-note").on("click",j.instance.addNote.bind(this)),t.find(".compact-calendar .season-moon-info .notes").on("click",j.instance.showCompactNotes.bind(this)),t.find(".compact-calendar .current-date .fa").on("click",j.instance.gmControlClick.bind(this)),t.find(".compact-calendar .time-controls .selector").on("click",j.instance.compactTimeControlClick.bind(this)),t.find(".compact-calendar .note-list .note").on("click",j.instance.viewNote.bind(this));else{this.element.find(".window-resizable-handle").show(),this.ensureCurrentDateIsVisible(t);const e=t.find(".current-date .fa");for(let t=0;t<e.length;t++)e[t].classList.contains("fa-chevron-left")?e[t].addEventListener("click",j.instance.viewPreviousMonth.bind(this)):e[t].classList.contains("fa-chevron-right")&&e[t].addEventListener("click",j.instance.viewNextMonth.bind(this));t.find(".calendar .days .day").on("click",j.instance.dayClick.bind(this)),t.find(".calendar-controls .today").on("click",j.instance.todayClick.bind(this)),t.find(".time-controls .time-unit .selector").on("click",j.instance.timeUnitClick.bind(this)),t.find(".controls .control").on("click",j.instance.gmControlClick.bind(this)),t.find(".controls .btn-apply").on("click",j.instance.dateControlApply.bind(this)),t.find(".calendar-controls .configure-button").on("click",j.instance.configurationClick.bind(this)),t.find(".date-notes .add-note").on("click",j.instance.addNote.bind(this)),t.find(".date-notes .note").on("click",j.instance.viewNote.bind(this))}t.find(".time-start").on("click",j.instance.startTime.bind(this)),t.find(".time-stop").on("click",j.instance.stopTime.bind(this))}}showCompactNotes(e){e.preventDefault(),this.compactViewShowNotes=!this.compactViewShowNotes,this.updateApp()}viewPreviousMonth(t){e.debug("Changing view to previous month"),t.stopPropagation(),this.currentYear&&(this.currentYear.changeMonth(-1),this.updateApp())}viewNextMonth(t){e.debug("Changing view to next month"),t.stopPropagation(),this.currentYear&&(this.currentYear.changeMonth(1),this.updateApp())}dayClick(t){e.debug("Day Clicked"),t.stopPropagation();let n=t.target;n.parentElement&&(n.classList.contains("note-count")?n=n.parentElement:n.classList.contains("moon-phase")&&n.parentElement.parentElement&&(n=n.parentElement.parentElement));const s=n.getAttribute("data-day");if(s){const t=parseInt(s),a=n.classList.contains("selected");if(this.currentYear&&t>-1){if(this.currentYear.resetMonths("selected"),!a){const e=this.currentYear.getMonth("visible");if(e){const n=e.days.findIndex((e=>e.numericRepresentation===t));n>-1&&(e.selected=!0,e.days[n].selected=!0,this.currentYear.selectedYear=this.currentYear.visibleYear)}}this.updateApp()}else e.error("Day has invalid data attribute or no current year is set!")}else e.error("Day is missing data attribute!")}todayClick(e){if(e.preventDefault(),this.currentYear){const e=this.currentYear.getMonth("selected");if(e){e.selected=!1;const t=e.getDay("selected");t&&(t.selected=!1)}const t=this.currentYear.getMonth("visible");t&&(t.visible=!1);const n=this.currentYear.getMonth();if(n){const e=n.getDay();e&&(this.currentYear.selectedYear=this.currentYear.numericRepresentation,this.currentYear.visibleYear=this.currentYear.numericRepresentation,n.visible=!0,n.selected=!0,e.selected=!0,this.updateApp())}}}compactTimeControlClick(t){if(t.stopPropagation(),this.currentYear){const n=t.currentTarget,s=n.getAttribute("data-type"),a=n.getAttribute("data-amount");if(s&&a){const t=parseInt(a);isNaN(t)||"second"!==s&&"minute"!==s&&"hour"!==s||(this.currentYear.changeTime(!0,s,t),u.SaveCurrentDate(this.currentYear).catch(e.error),this.currentYear.syncTime().catch(e.error))}}}timeUnitClick(e){var t;if(e.stopPropagation(),this.currentYear){const n=null===(t=e.currentTarget.getAttribute("data-type"))||void 0===t?void 0:t.toLowerCase();this.timeUnits.second=!1,this.timeUnits.minute=!1,this.timeUnits.hour=!1,this.timeUnits[n]=!0,this.updateApp()}}gmControlClick(t){if(t.stopPropagation(),this.currentYear){const n=t.currentTarget,s=n.getAttribute("data-type"),a=n.classList.contains("next");let i=!1;switch(s){case"time":const t=n.getAttribute("data-amount");if(t){const n=parseInt(t);if(!isNaN(n)){e.debug((a?"Forward":"Back")+" Time Clicked");const t=this.timeUnits.second?"second":this.timeUnits.minute?"minute":"hour";this.currentYear.changeTime(a,t,n),i=!0}}break;case"day":e.debug((a?"Forward":"Back")+" Day Clicked"),this.currentYear.changeDay(a?1:-1,"current"),i=!0;break;case"month":e.debug((a?"Forward":"Back")+" Month Clicked"),this.currentYear.changeMonth(a?1:-1,"current"),i=!0;break;case"year":e.debug((a?"Forward":"Back")+" Year Clicked"),this.currentYear.changeYear(a?1:-1,!1,"current"),i=!0}i&&(u.SaveCurrentDate(this.currentYear).catch(e.error),this.currentYear.syncTime().catch(e.error))}}dateControlApply(t){if(t.stopPropagation(),u.IsGm()){if(this.currentYear){let t=!1;const n=this.currentYear.selectedYear,s=this.currentYear.getMonth("selected");if(s){const a=s.getDay("selected");a&&(e.debug("Updating current date to selected day."),t=!0,n===this.currentYear.visibleYear&&s.visible?this.setCurrentDate(n,s,a):new Dialog({title:u.Localize("FSC.SetCurrentDateDialog.Title"),content:u.Localize("FSC.SetCurrentDateDialog.Content").replace("{DATE}",`${s.name} ${a.numericRepresentation}, ${n}`),buttons:{yes:{label:u.Localize("Yes"),callback:this.setCurrentDate.bind(this,n,s,a)},no:{label:u.Localize("No")}},default:"no"}).render(!0))}t||(u.SaveCurrentDate(this.currentYear).catch(e.error),this.currentYear.syncTime().catch(e.error))}}else u.UiNotification(u.Localize("FSC.Error.Calendar.GMCurrent"),"warn")}setCurrentDate(t,n,s){this.currentYear&&(this.currentYear.numericRepresentation=t,this.currentYear.resetMonths(),n.current=!0,n.selected=!1,s.current=!0,s.selected=!1,u.SaveCurrentDate(this.currentYear).catch(e.error),this.currentYear.syncTime().catch(e.error))}configurationClick(t){t.stopPropagation(),u.IsGm()?this.currentYear?!M.instance||M.instance&&!M.instance.rendered?(M.instance=new M(this.currentYear.clone()),M.instance.showApp()):M.instance.bringToTop():e.error("The Current year is not configured."):u.UiNotification(u.Localize("FSC.Error.Calendar.GMConfigure"),"warn")}addNote(t){if(t.stopPropagation(),this.currentYear)if(game.users&&!game.users.find((e=>e.isGM&&e.active)))u.UiNotification(game.i18n.localize("FSC.Warn.Notes.NotGM"),"warn");else{const e=this.currentYear.getMonth("selected")||this.currentYear.getMonth();if(e){const t=e.getDay("selected")||e.getDay();if(t){const n=this.currentYear.selectedYear||this.currentYear.numericRepresentation,s=e.numericRepresentation,a=t.numericRepresentation,i=new f;i.year=n,i.month=s,i.day=a,i.monthDisplay=e.name,i.title="",i.author=u.UserID(),i.playerVisible=u.GetDefaultNoteVisibility(),S.instance=new S(i),S.instance.showApp()}else u.UiNotification(u.Localize("FSC.Error.Note.NoSelectedDay"),"warn")}else u.UiNotification(u.Localize("FSC.Error.Note.NoSelectedMonth"),"warn")}else e.error("The Current year is not configured.")}viewNote(t){t.stopPropagation();const n=t.currentTarget.getAttribute("data-index");if(n){const e=this.notes.find((e=>e.id===n));e&&(S.instance=new S(e,!0),S.instance.showApp())}else e.error("No Data index on note element found.")}updateApp(){this.rendered&&this.render(!1)}settingUpdate(e=!1,t="all"){var n;"all"!==t&&"year"!==t||this.loadYearConfiguration(),"all"!==t&&"month"!==t||this.loadMonthConfiguration(),"all"!==t&&"weekday"!==t||this.loadWeekdayConfiguration(),"all"!==t&&"notes"!==t||this.loadNotes(),"leapyear"===t&&(null===(n=this.currentYear)||void 0===n||n.leapYearRule.loadFromSettings()),"all"!==t&&"time"!==t||this.loadTimeConfiguration(),"all"!==t&&"season"!==t||this.loadSeasonConfiguration(),"all"!==t&&"moon"!==t||this.loadMoonConfiguration(),"all"!==t&&"general"!==t||this.loadGeneralSettings(),this.loadCurrentDate(),e&&this.updateApp()}loadGeneralSettings(){e.debug("Loading general settings from world settings");const t=u.LoadGeneralSettings();t&&Object.keys(t).length&&(this.currentYear?this.currentYear.generalSettings=t:e.error("No Current year configured, can not load general settings."))}loadYearConfiguration(){e.debug("Loading year configuration from settings.");const t=u.LoadYearData();t&&Object.keys(t).length?(e.debug("Setting the year from data."),this.currentYear?this.currentYear.numericRepresentation=t.numericRepresentation:this.currentYear=new g(t.numericRepresentation),this.currentYear.prefix=t.prefix,this.currentYear.postfix=t.postfix,t.hasOwnProperty("showWeekdayHeadings")&&(this.currentYear.showWeekdayHeadings=t.showWeekdayHeadings),t.hasOwnProperty("firstWeekday")&&(this.currentYear.firstWeekday=t.firstWeekday)):(e.debug("No year configuration found, setting default year data."),this.currentYear=new g((new Date).getFullYear()))}loadMonthConfiguration(){if(e.debug("Loading month configuration from settings."),this.currentYear){const t=u.LoadMonthData();if(t.length){this.currentYear.months=[],e.debug("Setting the months from data.");for(let e=0;e<t.length;e++)if(Object.keys(t[e]).length){let n=parseInt(t[e].numberOfDays.toString()),s=void 0===t[e].numberOfLeapYearDays?0:parseInt(t[e].numberOfLeapYearDays.toString());isNaN(n)&&(n=1),isNaN(s)&&(s=1);const a=new y(t[e].name,t[e].numericRepresentation,t[e].numericRepresentationOffset,n,s);a.intercalary=t[e].intercalary,a.intercalaryInclude=t[e].intercalaryInclude,this.currentYear.months.push(a)}}0===this.currentYear.months.length&&(e.debug("No month configuration found, setting default month data."),this.currentYear.months=[new y(u.Localize("FSC.Date.January"),1,0,31),new y(u.Localize("FSC.Date.February"),2,0,28,29),new y(u.Localize("FSC.Date.March"),3,0,31),new y(u.Localize("FSC.Date.April"),4,0,30),new y(u.Localize("FSC.Date.May"),5,0,31),new y(u.Localize("FSC.Date.June"),6,0,30),new y(u.Localize("FSC.Date.July"),7,0,31),new y(u.Localize("FSC.Date.August"),8,0,31),new y(u.Localize("FSC.Date.September"),9,0,30),new y(u.Localize("FSC.Date.October"),10,0,31),new y(u.Localize("FSC.Date.November"),11,0,30),new y(u.Localize("FSC.Date.December"),12,0,31)])}else e.error("No Current year configured, can not load month data.")}loadWeekdayConfiguration(){if(e.debug("Loading weekday configuration from settings."),this.currentYear){const t=u.LoadWeekdayData();if(t.length){e.debug("Setting the weekdays from data."),this.currentYear.weekdays=[];for(let e=0;e<t.length;e++)this.currentYear.weekdays.push(new b(t[e].numericRepresentation,t[e].name))}else e.debug("No weekday configuration found, loading default data."),this.currentYear.weekdays=[new b(1,u.Localize("FSC.Date.Sunday")),new b(2,u.Localize("FSC.Date.Monday")),new b(3,u.Localize("FSC.Date.Tuesday")),new b(4,u.Localize("FSC.Date.Wednesday")),new b(5,u.Localize("FSC.Date.Thursday")),new b(6,u.Localize("FSC.Date.Friday")),new b(7,u.Localize("FSC.Date.Saturday"))]}else e.error("No Current year configured, can not load weekday data.")}loadSeasonConfiguration(){if(e.debug("Loading season configuration from settings."),this.currentYear){const t=u.LoadSeasonData();if(this.currentYear.seasons=[],t.length){e.debug("Setting the seasons from data.");for(let e=0;e<t.length;e++){const n=new w(t[e].name,t[e].startingMonth,t[e].startingDay);n.color=t[e].color,n.customColor=t[e].customColor,this.currentYear.seasons.push(n)}}}else e.error("No Current year configured, can not load season data.")}loadMoonConfiguration(){if(e.debug("Loading moon configuration from settings."),this.currentYear){const t=u.LoadMoonData();if(this.currentYear.moons=[],t.length){e.debug("Setting the moons from data.");for(let e=0;e<t.length;e++){const n=new C(t[e].name,t[e].cycleLength);n.phases=t[e].phases,n.firstNewMoon={yearReset:t[e].firstNewMoon.yearReset,yearX:t[e].firstNewMoon.yearX,year:t[e].firstNewMoon.year,month:t[e].firstNewMoon.month,day:t[e].firstNewMoon.day},n.color=t[e].color,n.cycleDayAdjust=t[e].cycleDayAdjust,this.currentYear.moons.push(n)}}}else e.error("No Current year configured, can not load moon data.")}loadTimeConfiguration(){if(e.debug("Loading time configuration from settings."),this.currentYear){const e=u.LoadTimeData();e&&Object.keys(e).length&&(this.currentYear.time.hoursInDay=e.hoursInDay,this.currentYear.time.minutesInHour=e.minutesInHour,this.currentYear.time.secondsInMinute=e.secondsInMinute,this.currentYear.time.gameTimeRatio=e.gameTimeRatio)}else e.error("No Current year configured, can not load time data.")}loadCurrentDate(){e.debug("Loading current date from settings.");const t=u.LoadCurrentDate();if(this.currentYear&&t&&Object.keys(t).length){this.currentYear.numericRepresentation=t.year,this.currentYear.visibleYear=t.year,this.currentYear.selectedYear=t.year,this.currentYear.resetMonths("current"),this.currentYear.resetMonths("visible");const n=this.currentYear.months.find((e=>e.numericRepresentation===t.month));if(n){n.current=!0,n.visible=!0;const s=n.days.find((e=>e.numericRepresentation===t.day));s?s.current=!0:(e.error("Save day could not be found in this month, perhaps number of days has changed. Setting current day to first day of month"),n.days[0].current=!0)}else e.error("Saved month could not be found, perhaps months have changed. Setting current month to the first month"),this.currentYear.months[0].current=!0,this.currentYear.months[0].visible=!0,this.currentYear.months[0].days[0].current=!0;this.currentYear.time.seconds=t.seconds,void 0===this.currentYear.time.seconds&&(this.currentYear.time.seconds=0)}else this.currentYear&&this.currentYear.months.length?(e.debug("No current date setting found, setting default current date."),this.currentYear.months[0].current=!0,this.currentYear.months[0].visible=!0,this.currentYear.months[0].days[0].current=!0):e.error("Error setting the current date.")}loadNotes(t=!1){e.debug("Loading notes from settings.");const n=u.LoadNotes();this.notes=n.map((e=>{const t=new f;return t.loadFromConfig(e),t})),t&&this.updateApp()}getNotesForDay(){const e=[];if(this.currentYear){const t=this.currentYear.selectedYear||this.currentYear.numericRepresentation,n=this.currentYear.getMonth("selected")||this.currentYear.getMonth();if(n){const s=n.getDay("selected")||n.getDay();s&&this.notes.forEach((a=>{a.isVisible(t,n.numericRepresentation,s.numericRepresentation)&&e.push(a.toTemplate())}))}}return e}worldTimeUpdate(t,n){e.debug(`World Time Update, new time: ${t}. Delta of: ${n}.`),this.currentYear&&this.currentYear.setFromTime(t,n)}combatUpdate(t,n,s){e.debug("Combat Update");const a=game.scenes?game.scenes.active.id:null;this.currentYear&&t.started&&(null!==a&&t.scene&&t.scene.id===a||null===a)&&(this.currentYear.time.combatRunning=!0,this.currentYear.time.updateUsers(),s&&s.hasOwnProperty("advanceTime")&&(e.debug("Combat Change Triggered"),this.currentYear.combatChangeTriggered=!0))}combatDelete(){e.debug("Combat Ended"),this.currentYear&&(this.currentYear.time.combatRunning=!1,this.currentYear.time.updateUsers())}gamePaused(e){this.currentYear&&this.currentYear.time.updateUsers()}startTime(){if(this.currentYear){const e=game.scenes?game.scenes.active.id:null;game.combats&&game.combats.size>0&&game.combats.find((t=>t.started&&(null!==e&&t.scene&&t.scene.id===e||null===e)))?u.UiNotification(game.i18n.localize("FSC.Warn.Time.ActiveCombats"),"warn"):this.currentYear.generalSettings.gameWorldTimeIntegration!==r.Self&&this.currentYear.generalSettings.gameWorldTimeIntegration!==r.Mixed||this.currentYear.time.startTimeKeeper()}}stopTime(){this.currentYear&&this.currentYear.time.stopTimeKeeper()}async timeKeepingCheck(){if(this.currentYear&&this.currentYear.generalSettings.gameWorldTimeIntegration!==r.None&&u.IsGm()){if(!u.GetImportRan()){const t=game.modules.get("calendar-weather"),n=game.modules.get("about-time");t&&t.active?(e.debug("Calendar/Weather detected."),new Dialog({title:u.Localize("FSC.Module.CalendarWeather.Title"),content:u.Localize("FSC.Module.CalendarWeather.Message"),buttons:{import:{label:u.Localize("FSC.Module.Import"),callback:this.moduleImportClick.bind(this,"calendar-weather")},export:{label:u.Localize("FSC.Module.CalendarWeather.Export"),callback:this.moduleExportClick.bind(this,"calendar-weather")},no:{label:u.Localize("FSC.Module.NoChanges"),callback:this.moduleDialogNoChangeClick.bind(this)}},default:"no"}).render(!0)):n&&n.active&&(e.debug("About Time detected."),new Dialog({title:u.Localize("FSC.Module.AboutTime.Title"),content:u.Localize("FSC.Module.AboutTime.Message"),buttons:{import:{label:u.Localize("FSC.Module.Import"),callback:this.moduleImportClick.bind(this,"about-time")},export:{label:u.Localize("FSC.Module.AboutTime.Export"),callback:this.moduleExportClick.bind(this,"about-time")},no:{label:u.Localize("FSC.Module.NoChanges"),callback:this.moduleDialogNoChangeClick.bind(this)}},default:"no"}).render(!0))}await this.currentYear.syncTime()}}async moduleImportClick(t){this.currentYear?("about-time"===t?(await D.importAboutTime(this.currentYear),this.updateApp()):"calendar-weather"===t&&(await D.importCalendarWeather(this.currentYear),this.updateApp()),await u.SetImportRan(!0)):e.error("Could not export as the current year is not defined")}async moduleExportClick(t){this.currentYear?("about-time"===t?await D.exportToAboutTime(this.currentYear):"calendar-weather"===t&&await D.exportCalendarWeather(this.currentYear),await u.SetImportRan(!0)):e.error("Could not export as the current year is not defined")}async moduleDialogNoChangeClick(){await u.SetImportRan(!0)}}class N{static show(t=null,n=null,s=null){if(j.instance&&j.instance.currentYear){null!==t&&(t=parseInt(t.toString()),isNaN(t)?e.error("Invalid year was passed in."):j.instance.currentYear.visibleYear=t);const a=j.instance.currentYear.leapYearRule.isLeapYear(j.instance.currentYear.visibleYear);if(null!==n&&(n=parseInt(n.toString()),isNaN(n)?e.error("Invalid month was passed in."):((-1===n||n>j.instance.currentYear.months.length)&&(n=j.instance.currentYear.months.length-1),j.instance.currentYear.resetMonths("visible"),j.instance.currentYear.months[n].visible=!0)),null!==s)if(s=parseInt(s.toString()),isNaN(s))e.error("Invalid day was passed in.");else{const e=j.instance.currentYear.getMonth("visible")||j.instance.currentYear.getMonth("current");if(e){const t=a?e.numberOfDays:e.numberOfLeapYearDays;s>0&&(s-=1),(-1==s||s>t)&&(s=t-1),j.instance.currentYear.resetMonths("selected"),e.days[s].selected=!0,e.selected=!0,j.instance.currentYear.selectedYear=j.instance.currentYear.visibleYear}}j.instance.showApp()}else e.error("The current year is not defined, can not use macro")}static setDateTime(t=null,n=null,s=null,a=null,i=null,o=null){if(u.IsGm())if(j.instance&&j.instance.currentYear){const r=j.instance.currentYear.getMonth(),c=j.instance.currentYear.time.getCurrentTime();let h=0;if(h+=null!==o?o:parseInt(c.second),h+=null!==i?i*j.instance.currentYear.time.secondsInMinute:parseInt(c.minute),h+=null!==a?a*j.instance.currentYear.time.minutesInHour*j.instance.currentYear.time.secondsInMinute:parseInt(c.hour),null===s)if(r){const e=r.getDay();s=e?e.numericRepresentation:1}else s=1;n=null!==n?n>-1&&n<j.instance.currentYear.months.length?j.instance.currentYear.months[n].numericRepresentation:j.instance.currentYear.months[j.instance.currentYear.months.length-1].numericRepresentation:r?r.numericRepresentation:1,null===t&&(t=j.instance.currentYear.numericRepresentation);const l=j.instance.currentYear.dateToDays(t,n,s,!0,!0)-1;h+=j.instance.currentYear.time.getTotalSeconds(l,!1),j.instance.currentYear.updateTime(j.instance.currentYear.secondsToDate(h)),u.SaveCurrentDate(j.instance.currentYear).catch(e.error),j.instance.currentYear.syncTime().catch(e.error),j.instance.updateApp()}else e.error("The current year is not defined, can not use macro");else u.UiNotification(u.Localize("FSC.Warn.Macros.GMUpdate"),"warn")}static changeDateTime(t=0,n=0,s=0,a=0,i=0,o=0){if(u.IsGm())if(j.instance&&j.instance.currentYear){let r=!1,c=!1;0!==t&&(j.instance.currentYear.changeTime(!0,"second",t),r=!0),0!==n&&(j.instance.currentYear.changeTime(!0,"minute",n),r=!0),0!==s&&(j.instance.currentYear.changeTime(!0,"hour",s),r=!0),0!==i&&(j.instance.currentYear.changeMonth(i,"current"),c=!0),0!==a&&(j.instance.currentYear.changeDay(a,"current"),c=!0),0!==o&&(j.instance.currentYear.changeYear(o,!c,"current"),c=!0),(c||r)&&(u.SaveCurrentDate(j.instance.currentYear).catch(e.error),j.instance.currentYear.syncTime().catch(e.error),j.instance.updateApp())}else e.error("The current year is not defined, can not use macro");else u.UiNotification(u.Localize("FSC.Warn.Macros.GMUpdate"),"warn")}}j.instance=new j,Hooks.on("ready",(()=>{j.instance.init().catch(e.error),window.SimpleCalendar={show:N.show,setDateTime:N.setDateTime,changeDateTime:N.changeDateTime,Hooks:l}})),Hooks.on("getSceneControlButtons",j.instance.getSceneControlButtons),Hooks.on("updateWorldTime",j.instance.worldTimeUpdate.bind(j.instance)),Hooks.on("updateCombat",j.instance.combatUpdate.bind(j.instance)),Hooks.on("deleteCombat",j.instance.combatDelete.bind(j.instance)),Hooks.on("pauseGame",j.instance.gamePaused.bind(j.instance))})();